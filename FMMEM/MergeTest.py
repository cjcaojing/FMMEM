# -*- coding: utf-8 -*-
"""
Created on Thu Mar 30 11:36:31 2023

@author: Administrator
"""

import numpy as np
import igraph as ig
import random  as rd
import networkx as nx
import copy
import os
import time
from tqdm import tqdm
# 各模块函数
import motif_network_construct as net_stru_func
import algorithm_FCD_function as alg_func

import FMMEM_function as func
from igraph.clustering import VertexClustering
# import FMMEM_function_NOF as func
# import FMMEM_function_NOMerge as func
# import FMMEM_function_NOFMerge as func
# 引入外部函数
import find_motifs as fm
import cython_function as cfunc


# =============================================================================
# 网络信息 
# network
# =============================================================================
## 真实网络
path = r"data/realnetwork"
# 人工合成网络
LFR_path = r"data/LFRnetwork/LFR_1000"
# test_path = r"data/test"
network50 =  r'data/LFRnetwork/LFR_100_20_25/'

## 真实网络
karate_network = path + r'/karate.txt'
dolphins_network = path + r'/dolphins.txt'
polbooks_network = path + r'/polbooks.txt'
football_network = path + r'/football.txt'
jazz_network = path + r'/jazz.txt'
metabolic_network = path + r'/metabolic.txt'
netscience_network = path + r'/netscience.txt'
email_network = path + r'/email.txt'
email_Eu_core_network = path + r'/email_Eu_core.txt'
road_minnesota_network = path + r'/road_minnesota.txt'
cornell_network = path + r'/cornell.txt'
cora_network = path + r'/cora.txt'
citeseer_network = path + r'/citeseer.txt'
powergrid_network = path + r'/powergrid.txt'
powergrid_0_network = path + r'/powergrid_0.txt'
pgp_network = path + r'/pgp.txt'
comDBLP_network = path + r'/comDBLP.txt'
polblogs_network = path + r'/polblogs.txt'
gplus_network = path + r'/gplus.txt'

benson_network = path + r'/benson.txt'
beican_9_network = path + r'/9_beican.txt'
test12_network = path + r'/test_12.txt'
zhang_network = path + r'/zhang.txt'
lesmis_network = path + r'/lesmis.txt'

## 功能网络
macaque_network = path + r'/macaque.txt'

## 测试网络
combat_network = path + r'/combat.txt'
example_14_network = path + r'/example_14.txt'
example_15_network = path + r'/example_15.txt'
test_7_network = path + r'/test_7.txt'

# 选择网络
# real
network_name = 'test_7'
network = eval(network_name + '_network')
groundtruth_path = path + "/real/" + network_name + '_groundtruth.txt'

# LFR 
# lfr_no = '80'
# network = LFR_path + r'/network' + str(lfr_no)+'.txt'
# network_name = "network" + str(lfr_no)
# groundtruth_path = LFR_path + "/real/" + network_name + '_groundtruth.txt'

    
# test
# network = network50 + 'network50.txt'
# network_name = 'network50'
# groundtruth_path = network + "/real/" + network_name + '_groundtruth.txt'


# 获取网络数据中的边列表，并根据其使用igraph创建网络
G1 = nx.read_edgelist(network, create_using=nx.Graph())
G1 = G1.to_undirected()
Gi = ig.Graph.Read_Edgelist(network)
Gi = Gi.subgraph(map(int,G1.nodes()))          
Gi = Gi.as_undirected()

edge_all = Gi.get_edgelist()
node_list = list(G1.nodes)
node_all = list(map(int,node_list))

# 各参数设置
# =============================================================================
n=G1.number_of_nodes()
NP = 100
Gen = 600  #进化代数
threshold_value = 0.25 #阈值
# SOS算法参数
lu_bound = [0,n-1] #元素取值范围
# DE算法参数
F = 0.9
CR = 0.3
D = n
DE_info = {}
DE_info['F'],DE_info['CR'],DE_info['D'] = F,CR,D
Qlmin = 0.0
# 各标记列表
Mlist = {1:"M1",2:"M2",3:"M3",4:"M4",5:"M5",6:"M6",7:"M7",8:"M8"} #模体选择列表
Qlist = {1:"Q",2:"Qg",3:"Qc_FCD",4:"Qc_OCD",5:"Qov",6:"MC"} # 模块度函数列表
nmmlist = {1:"NOMM",2:"NMM",3:"MNMM",4:"NWMM"} # nmm操作列表
# 本次算法使用的标记
M_flag = Mlist[1]
Q_flag = Qlist[1] #模块度函数 Q
nmm_flag = nmmlist[3]
# 独立运行运行次数
Independent_Runs = 1 #本次实验独立运行次数
NMIflag = 0 #0:关闭NMI，1:开启NMI。 默认关闭
 
# =============================================================================
# 构建基于模体M的加权网络
# =============================================================================
# 获得无权网络邻接矩阵
G2 = nx.Graph() 
G2.add_nodes_from([i for i in range(n)])
G2.add_edges_from(edge_all)
adj= nx.adjacency_matrix(G2)
adj=adj.todense() 
# =============================================================================
# 网络平均度计算
# =============================================================================
degrees = dict(G2.degree())
degrees_sum = sum(degrees.values())
average_degrees = round(degrees_sum/n,2)

G,ij_participate_motif_number_list = net_stru_func.construct_weighted_network(G2,edge_all,n,M_flag) #构建出基于M_flag模体加权的网络
# 构建基于模体的加权网络邻接矩阵motif_adj
motif_adj = nx.adjacency_matrix(G)
motif_adj = motif_adj.todense() 
me_adj = motif_adj + adj #总权重矩阵=模体权重+边权重
W = np.sum(motif_adj) # 权值之和
m1 = np.sum(motif_adj, axis=0)
B = motif_adj - np.multiply(m1.T,m1)/W  # 计算B矩阵
m = np.ravel(m1) # adj 各列之和
m0 = np.ravel(np.sum(adj, axis=0)) #节点度
W0 = np.sum(adj) #网络中的边数*2

weights = []
for edge in edge_all:
    weights.append(motif_adj[edge[0],edge[1]])

# 初始化模体各节点的边邻域节点集、模体邻居节点集、点模体邻居节点集
node_nei_info, node_adj_neis, node_moadj_neis, node_meadj_neis = dict(),dict(),dict(),dict()
node_moadj_sum, node_meadj_sum = [0]*n, [0]*n
for i in range(n):
    node_adj_neis[i] = np.nonzero(adj[i,:])[1]
    node_moadj_neis[i] = np.nonzero(motif_adj[i,:])[1]
    node_meadj_neis[i] = np.nonzero(me_adj[i,:])[1]
    node_moadj_sum[i] = np.sum(motif_adj[i,:])
    node_meadj_sum[i] = np.sum(me_adj[i,:])
node_nei_info["adj"], node_nei_info["motif_adj"], node_nei_info["me_adj"] = node_adj_neis,node_moadj_neis,node_meadj_neis
node_nei_info["motif_adj_sum"], node_nei_info["me_adj_sum"] = node_moadj_sum, node_meadj_sum

# =============================================================================
# 获得基于模体M1的，每条边参与构建的模体集合(点集与边集)
# =============================================================================
g = func.get_undirected_motif(M_flag)
D = nx.DiGraph.number_of_nodes(g) #模体阶数
# 计算该网络的模体点、边覆盖率
node_coverage_rate = round(fm.node_coverage_rate_of_motif(G1,g,directed=False, weighted=False),2)
edge_coverage_rate = round(fm.edge_coverage_rate_of_motif(G1,g,directed=False, weighted=False),2)

node_motif_num_list=[]#####点模体度列表#####
for i in range(n):
    node_motif_num_list.append(fm.node_in_motif(G,g,i,directed=False,weighted=False))
node_motif_num_arr = np.asarray(node_motif_num_list,dtype=int)
# 获得模体集合：点集和边集
motif_node_set, motif_edge_set = fm.total_motif_list(G, g, directed=False, weighted=False)
# motif_node_set.reverse(), motif_edge_set.reverse()
motif_node_set = sorted(motif_node_set,key=lambda x:(x))

r = len(motif_node_set) #网络中的模体数量
motif_dict,mno_dict,node_mdict,edge_mdict,motif_info = dict(),dict(),dict(),dict(),dict() # 初始化模体字典和模体编号字典
mno_mw_arr = np.zeros((r,1), dtype = int)
for mno, mo in enumerate(motif_node_set):
    motif_dict[tuple(mo)] = mno
    mno_dict[mno] = tuple(mo)
    mno_mw_arr[mno] = motif_adj[mo[0],mo[1]] + motif_adj[mo[1],mo[2]] + motif_adj[mo[0],mo[2]]
    
mno_arr = np.empty((r,D), dtype = int)
for mno, mo in enumerate(motif_node_set):
    for i in range(D):
        mno_arr[mno,i] = mo[i]

# 获得点模体集合，构建集合字典
for i in range(n):
    NodeSet,EdgeSet = fm.node_in_motif_list(G, g, i , directed=False, weighted=False)
    node_mdict[i] = [tuple(sorted(im)) for im in NodeSet]
# # 获得边模体集合
for edge in edge_all:
    NodeSet1, EdgeSet1 = fm.edge_in_motif_list(G, g, edge, directed=False, weighted=False) 
    edgel = sorted([int(edge[0]),int(edge[1])])
    edge_mdict[tuple(edgel)] = [tuple(sorted(list(map(int,im)))) for im in NodeSet1]

#网络中的模体信息，(模体数目，模体字典，模体编号字典,点模体集合字典, MU矩阵)
motif_info['r'], motif_info['motif_dict'], motif_info['mno_arr'], motif_info['mno_dict'],motif_info['node_mdict'],motif_info['node_mnum'] = r,motif_dict,mno_arr,mno_dict,node_mdict,node_motif_num_arr
motif_info['mw'] = mno_mw_arr.flatten()
motif_info['MUs'] = {} #初始化
motif_info['edge_mdict'] = edge_mdict
# 初始化NMi
nmilist = [] # 用于保存每一代的NMI值
# 获取真实社区划分列表
file_flag = os.path.exists(groundtruth_path)
if file_flag:
    NMIflag,real_mem = 1,[]
    with open(groundtruth_path, mode='r',encoding='UTF-8') as f:
          real_mem = list(map(int,f.read().splitlines()))

# =============================================================================
# 计算网络种节点之间的紧密度
# =============================================================================
Compactness = np.zeros((n,n), dtype = float)
for i in range(n):
    for j in range(n):
        Compactness[i,j] = (motif_adj[i,j] - (m[i]*m[j])/W)/W
        
MB = np.zeros((n,n), dtype = float)
MBW = np.sum(me_adj) # 权值之和
MBm = np.ravel(np.sum(me_adj, axis=0))
for i in range(n):
    for j in range(n):
        if i!=j:
            MB[i,j] = me_adj[i,j] - (MBm[i]*MBm[j])/MBW

# =============================================================================
# 社区合并
# =============================================================================
def merge_comm(Gi,yyyy,n):
    bol = False
    while not bol:
        member_0 = [-1]*n
        for cno in range(len(yyyy)):
            for j in yyyy[cno]:
                member_0[j]=cno
        a = VertexClustering(Gi,member_0)
        b = a.cluster_graph(combine_edges = False)
        Cm = b.get_adjacency().data
        listdui = copy.deepcopy(np.diagonal(Cm))
        lists = []
        listzhi = []
        for c_ind in range(len(Cm)):
            Cm[c_ind][c_ind] = 0
            s = np.argmax(Cm[c_ind])
            zhi = np.max(Cm[c_ind])
            lists.append(s)
            listzhi.append(zhi)
        bol = np.all((np.array(listdui) - np.array(listzhi)) > 0)
        if bol == False:
            uuu = np.array(listdui) - np.array(listzhi)
            ke = np.argmin(uuu)
            yyyy[ke] += yyyy[lists[ke]]
            yyyy.pop(lists[ke])
    return yyyy,bol  

XMemMatrix = {}

# Qw = 0.6860385625331175
# c = 38
email_15 = [5, 5, 5, 10, 5, 5, 5, 5, 5, 4, 5, 9, 5, 4, 7, 6, 4, 5, 5, 5, 5, 5, 5, 4, 5, 5, 5, 5, 14, 6, 11, 5, 4, 4, 5, 5, 5, 5, 5, 6, 5, 0, 5, 2, 11, 10, 5, 5, 6, 5, 12, 12, 5, 7, 6, 6, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 4, 10, 10, 11, 12, 9, 7, 6, 4, 6, 6, 12, 4, 8, 9, 6, 7, 7, 6, 7, 10, 12, 11, 7, 7, 7, 7, 5, 13, 7, 7, 0, 5, 5, 6, 6, 12, 6, 4, 4, 4, 4, 4, 4, 4, 4, 6, 4, 6, 4, 4, 4, 11, 4, 4, 4, 4, 6, 6, 6, 6, 12, 10, 11, 12, 12, 7, 8, 8, 9, 9, 9, 9, 2, 9, 9, 9, 9, 9, 9, 9, 9, 9, 2, 6, 12, 12, 11, 12, 2, 1, 4, 6, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 7, 7, 9, 5, 7, 12, 7, 7, 7, 6, 6, 6, 4, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 4, 4, 4, 7, 5, 12, 9, 8, 12, 5, 8, 4, 12, 6, 4, 3, 8, 8, 12, 3, 8, 10, 5, 5, 5, 8, 8, 5, 11, 5, 5, 12, 4, 12, 12, 6, 11, 5, 5, 5, 6, 3, 5, 7, 9, 12, 12, 12, 0, 5, 4, 6, 12, 2, 4, 3, 12, 4, 12, 10, 4, 11, 10, 10, 4, 6, 6, 4, 6, 4, 6, 4, 4, 4, 4, 8, 2, 9, 3, 5, 0, 5, 6, 8, 6, 12, 3, 14, 14, 14, 7, 14, 7, 12, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 11, 12, 11, 2, 11, 7, 11, 6, 11, 12, 12, 12, 0, 4, 6, 12, 5, 12, 2, 12, 12, 5, 12, 12, 12, 9, 4, 2, 0, 12, 7, 6, 6, 12, 6, 6, 12, 6, 4, 12, 12, 7, 9, 12, 10, 5, 12, 7, 12, 12, 8, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 6, 12, 0, 0, 0, 12, 2, 7, 2, 12, 6, 6, 8, 7, 0, 8, 2, 2, 2, 2, 2, 2, 2, 2, 6, 12, 9, 7, 12, 3, 11, 7, 3, 12, 11, 12, 10, 10, 3, 11, 10, 2, 14, 11, 2, 6, 6, 6, 6, 6, 8, 6, 6, 8, 8, 12, 6, 3, 12, 12, 12, 12, 12, 3, 7, 12, 12, 7, 12, 12, 3, 12, 7, 7, 7, 7, 7, 12, 4, 6, 10, 3, 6, 6, 6, 3, 10, 3, 3, 3, 3, 3, 3, 3, 3, 10, 3, 3, 10, 4, 10, 10, 4, 10, 10, 4, 12, 10, 7, 10, 10, 10, 10, 6, 2, 9, 10, 10, 10, 10, 10, 10, 8, 3, 10, 12, 10, 10, 6, 10, 4, 10, 10, 7, 0, 10, 10, 14, 7, 14, 12, 4, 4, 3, 8, 12, 10, 10, 12, 10, 10, 12, 2, 11, 11, 6, 7, 10, 12, 12, 12, 12, 2, 12, 3, 8, 9, 9, 14, 9, 9, 14, 12, 4, 3, 3, 7, 7, 12, 4, 7, 2, 12, 9, 11, 4, 7, 6, 0, 7, 5, 11, 3, 6, 6, 12, 12, 12, 12, 12, 2, 2, 6, 6, 6, 6, 6, 7, 7, 6, 6, 6, 7, 7, 7, 10, 7, 10, 7, 7, 7, 12, 7, 12, 12, 12, 11, 10, 11, 11, 6, 7, 7, 7, 7, 7, 7, 13, 7, 6, 7, 7, 12, 8, 7, 13, 13, 0, 10, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 6, 6, 4, 4, 4, 4, 6, 11, 4, 4, 6, 12, 6, 6, 6, 6, 7, 6, 6, 4, 11, 11, 6, 4, 4, 12, 6, 4, 4, 6, 6, 6, 6, 6, 12, 12, 12, 12, 12, 12, 3, 12, 7, 3, 9, 8, 7, 12, 8, 12, 7, 7, 7, 9, 9, 9, 9, 9, 2, 2, 2, 2, 8, 2, 2, 8, 9, 9, 7, 9, 9, 9, 14, 9, 9, 9, 9, 2, 2, 2, 2, 2, 2, 8, 12, 12, 12, 12, 12, 12, 2, 3, 1, 1, 4, 12, 3, 4, 7, 7, 7, 12, 5, 12, 12, 12, 12, 0, 7, 8, 6, 6, 4, 6, 6, 6, 6, 6, 0, 6, 6, 6, 2, 6, 6, 6, 6, 14, 6, 7, 6, 6, 6, 6, 6, 6, 6, 6, 6, 4, 6, 5, 3, 8, 12, 3, 8, 8, 8, 8, 3, 12, 7, 12, 4, 7, 7, 3, 3, 8, 8, 12, 3, 12, 8, 12, 10, 8, 8, 12, 0, 4, 4, 4, 12, 12, 12, 12, 12, 5, 12, 3, 3, 3, 5, 9, 9, 12, 12, 3, 12, 12, 12, 2, 14, 8, 4, 6, 12, 2, 2, 4, 3, 3, 3, 3, 7, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 12, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 5, 8, 8, 8, 6, 14, 14, 8, 2, 14, 14, 8, 7, 14, 7, 14, 12, 12, 6, 6, 6, 6, 12, 0, 12, 3, 7, 7, 7, 11, 11, 3, 12, 12, 0, 14, 12, 12, 12, 0, 0, 0, 12, 2, 2, 2, 2, 2, 2, 2, 12, 5, 5, 12, 12, 12, 12, 12, 9, 4, 3, 2, 4, 12, 2, 12, 14, 4, 4, 4, 7, 7, 7, 7, 7, 12, 12, 12, 12, 0, 0, 2, 12, 12, 0, 0, 0, 12, 7, 2, 12, 8, 8, 7, 2, 8, 2, 12, 3, 3, 12, 10, 10, 10, 10, 3, 8, 14, 14, 6, 3, 3, 7, 12, 0, 7, 7, 13, 12, 12, 12, 12, 12, 3, 3, 3, 3, 3, 3, 3, 3, 7, 7, 7, 12, 14, 4, 3, 3, 3, 3, 3, 3, 3, 10, 3, 3, 3, 3, 4, 4, 7, 10, 8, 8, 10, 7, 14, 4, 12, 12, 7, 12, 12, 12, 3, 8, 9, 14, 14, 14, 12, 14, 14, 0, 12, 12, 6, 2, 6, 7, 14, 14, 7, 7, 7, 7, 7, 10, 6, 12, 12, 12, 12, 12, 4, 6, 4, 6, 12, 3, 3, 8, 2, 3, 7, 5, 12, 14, 6, 3, 8, 0, 0, 0, 3, 2, 3, 4, 2, 0, 8, 12, 12, 0, 12, 12, 0, 10, 10, 7, 3, 7, 12, 7, 12, 12]
email_34 = [691, 691, 691, 318, 691, 691, 691, 691, 691, 941, 691, 434, 691, 941, 434, 996, 673, 691, 691, 691, 691, 691, 691, 941, 691, 691, 691, 691, 1110, 996, 419, 691, 941, 941, 691, 691, 691, 691, 691, 996, 691, 419, 691, 1047, 691, 318, 691, 691, 996, 691, 691, 691, 318, 691, 996, 996, 318, 318, 318, 318, 459, 318, 318, 318, 318, 318, 318, 318, 318, 941, 318, 318, 691, 996, 434, 434, 996, 941, 996, 996, 691, 941, 691, 434, 996, 332, 691, 996, 332, 318, 896, 996, 332, 332, 332, 332, 691, 752, 332, 332, 996, 316, 691, 996, 996, 545, 996, 941, 941, 941, 941, 941, 941, 941, 673, 996, 941, 996, 941, 941, 941, 419, 941, 941, 673, 691, 996, 996, 996, 996, 691, 459, 691, 691, 691, 459, 691, 691, 434, 434, 434, 434, 1047, 434, 434, 434, 434, 434, 434, 434, 691, 434, 141, 996, 691, 896, 419, 352, 1047, 690, 434, 996, 941, 941, 941, 941, 941, 941, 941, 941, 996, 941, 941, 941, 941, 941, 941, 941, 941, 941, 941, 941, 434, 434, 434, 691, 434, 545, 332, 434, 332, 996, 996, 996, 673, 996, 996, 996, 996, 996, 996, 996, 996, 996, 996, 996, 996, 996, 996, 996, 996, 996, 996, 996, 996, 996, 996, 996, 996, 996, 996, 996, 721, 673, 673, 662, 691, 691, 691, 691, 691, 691, 691, 941, 545, 691, 941, 316, 691, 691, 691, 691, 691, 459, 691, 691, 691, 547, 691, 691, 419, 691, 691, 691, 673, 896, 545, 996, 996, 691, 691, 691, 996, 316, 691, 332, 434, 545, 896, 691, 419, 691, 673, 996, 691, 1047, 673, 316, 545, 941, 691, 318, 673, 1047, 318, 318, 673, 996, 996, 673, 996, 941, 996, 941, 673, 941, 996, 691, 1047, 434, 1077, 1092, 419, 691, 996, 691, 996, 545, 691, 1110, 1110, 1110, 1110, 760, 1110, 545, 996, 996, 996, 996, 996, 996, 996, 996, 996, 996, 996, 996, 419, 691, 419, 1047, 419, 332, 419, 996, 419, 691, 316, 691, 419, 941, 996, 545, 691, 691, 141, 996, 662, 691, 691, 545, 691, 434, 673, 141, 419, 545, 662, 996, 996, 662, 996, 996, 545, 996, 673, 691, 545, 332, 434, 691, 318, 691, 691, 332, 691, 691, 547, 419, 419, 419, 419, 419, 419, 419, 419, 1047, 1047, 996, 352, 419, 419, 691, 352, 1047, 332, 419, 141, 996, 996, 673, 332, 419, 691, 1047, 1047, 1047, 1047, 1047, 1047, 141, 1047, 742, 545, 434, 332, 691, 409, 419, 332, 316, 545, 691, 545, 318, 318, 318, 332, 318, 1047, 760, 419, 1047, 996, 996, 996, 996, 996, 691, 996, 996, 547, 691, 691, 996, 316, 691, 691, 141, 545, 545, 316, 332, 545, 545, 332, 545, 141, 409, 691, 1003, 691, 332, 332, 662, 545, 996, 996, 459, 409, 996, 996, 996, 1077, 318, 409, 318, 1092, 1092, 1077, 1077, 409, 409, 318, 409, 409, 318, 673, 318, 737, 941, 318, 318, 673, 318, 737, 660, 896, 318, 459, 459, 996, 1047, 434, 318, 318, 318, 318, 318, 318, 547, 409, 318, 545, 318, 318, 996, 318, 996, 662, 737, 662, 419, 318, 318, 760, 662, 760, 941, 941, 941, 409, 545, 318, 318, 318, 545, 318, 318, 545, 1047, 419, 662, 996, 662, 996, 545, 545, 996, 545, 1047, 545, 316, 547, 434, 434, 760, 434, 996, 760, 545, 941, 316, 316, 434, 434, 545, 941, 434, 1047, 141, 434, 419, 941, 459, 996, 419, 434, 691, 419, 996, 996, 996, 691, 691, 691, 545, 434, 141, 141, 996, 996, 996, 996, 996, 332, 332, 996, 996, 996, 332, 332, 332, 318, 332, 737, 332, 332, 332, 896, 332, 902, 896, 896, 996, 419, 996, 996, 996, 332, 332, 332, 332, 332, 332, 752, 332, 996, 332, 332, 691, 691, 332, 752, 752, 996, 459, 691, 996, 996, 996, 996, 996, 996, 996, 996, 996, 996, 996, 996, 545, 545, 545, 545, 545, 352, 221, 545, 545, 352, 545, 691, 545, 545, 996, 996, 673, 941, 941, 673, 996, 673, 673, 673, 996, 691, 996, 996, 996, 996, 459, 996, 691, 941, 419, 419, 434, 673, 941, 691, 996, 673, 673, 996, 996, 996, 996, 996, 691, 141, 896, 419, 352, 941, 1077, 545, 332, 1077, 434, 691, 1110, 691, 1109, 691, 459, 459, 459, 434, 434, 434, 434, 434, 141, 1047, 1047, 691, 911, 1047, 1047, 911, 434, 434, 332, 434, 434, 434, 760, 434, 434, 434, 996, 141, 141, 141, 141, 141, 141, 742, 332, 352, 352, 352, 352, 691, 1047, 409, 690, 690, 941, 316, 941, 941, 660, 662, 434, 545, 691, 545, 545, 545, 545, 419, 332, 547, 691, 996, 673, 996, 996, 996, 996, 996, 419, 996, 996, 996, 1047, 996, 996, 996, 996, 760, 996, 1110, 996, 996, 996, 419, 996, 996, 996, 996, 996, 721, 996, 691, 409, 547, 691, 1092, 691, 691, 691, 691, 1077, 545, 1003, 545, 545, 332, 662, 1077, 316, 691, 691, 545, 691, 691, 691, 419, 459, 547, 547, 352, 1047, 673, 673, 673, 141, 691, 896, 545, 545, 691, 691, 1077, 409, 1077, 691, 434, 434, 545, 896, 316, 691, 691, 691, 1047, 760, 1109, 673, 996, 691, 1047, 1047, 673, 316, 316, 316, 316, 332, 673, 673, 673, 673, 996, 673, 673, 673, 941, 996, 691, 1047, 1047, 1047, 1047, 1047, 419, 419, 419, 419, 419, 419, 419, 419, 691, 332, 691, 691, 996, 760, 760, 547, 1110, 1110, 760, 547, 1110, 760, 760, 760, 545, 545, 996, 996, 996, 996, 332, 419, 419, 409, 332, 332, 332, 419, 419, 316, 316, 316, 545, 760, 409, 691, 221, 419, 434, 419, 545, 141, 141, 141, 141, 141, 141, 141, 662, 691, 691, 545, 545, 545, 545, 545, 434, 673, 1092, 141, 673, 141, 141, 545, 760, 673, 996, 673, 332, 332, 332, 332, 332, 691, 691, 911, 691, 419, 419, 1047, 352, 141, 419, 419, 419, 352, 332, 141, 221, 1109, 1109, 1003, 1047, 911, 1047, 1077, 409, 316, 352, 318, 318, 318, 896, 409, 911, 760, 760, 996, 316, 409, 545, 545, 545, 332, 332, 332, 545, 662, 902, 141, 902, 409, 409, 409, 409, 409, 409, 409, 409, 1003, 332, 662, 662, 760, 996, 409, 1077, 409, 1092, 1077, 1077, 409, 737, 409, 1077, 409, 409, 673, 673, 660, 896, 1109, 547, 318, 662, 760, 941, 318, 545, 691, 545, 545, 545, 316, 547, 996, 760, 760, 760, 902, 760, 760, 419, 691, 545, 996, 141, 996, 332, 760, 760, 332, 332, 332, 332, 332, 419, 673, 221, 221, 221, 419, 545, 673, 996, 673, 996, 1114, 409, 1077, 1109, 141, 409, 662, 691, 545, 760, 996, 316, 547, 1047, 1047, 1047, 316, 1047, 316, 673, 1047, 419, 332, 332, 316, 545, 141, 352, 419, 318, 896, 545, 409, 662, 545, 332, 221, 1114]
email_37 = [888, 888, 888, 945, 888, 888, 888, 888, 888, 208, 888, 482, 888, 208, 505, 823, 208, 888, 888, 888, 888, 888, 888, 208, 888, 888, 888, 888, 870, 823, 144, 888, 208, 208, 888, 888, 888, 888, 888, 823, 888, 888, 888, 1095, 888, 945, 888, 888, 823, 888, 888, 888, 888, 888, 823, 823, 945, 945, 945, 945, 945, 945, 945, 945, 945, 945, 945, 945, 945, 208, 945, 945, 888, 823, 482, 505, 823, 208, 823, 823, 888, 888, 888, 482, 823, 888, 888, 823, 586, 945, 888, 823, 586, 888, 888, 210, 888, 754, 888, 888, 823, 888, 888, 823, 823, 888, 823, 208, 208, 208, 208, 208, 208, 208, 554, 823, 208, 823, 208, 208, 208, 144, 208, 208, 554, 208, 823, 823, 823, 823, 888, 343, 888, 888, 888, 683, 888, 888, 482, 482, 482, 482, 1095, 482, 482, 482, 482, 482, 482, 482, 888, 482, 494, 823, 888, 888, 144, 583, 1095, 169, 208, 823, 208, 208, 208, 208, 208, 208, 208, 208, 343, 208, 208, 208, 208, 823, 208, 208, 208, 208, 208, 208, 505, 586, 482, 888, 505, 558, 586, 505, 586, 823, 823, 823, 554, 823, 823, 823, 823, 823, 823, 823, 823, 823, 823, 823, 823, 823, 823, 823, 823, 823, 823, 823, 823, 823, 823, 823, 823, 823, 823, 823, 391, 554, 208, 888, 888, 888, 888, 888, 888, 888, 888, 888, 888, 888, 888, 910, 888, 888, 888, 888, 888, 343, 888, 888, 888, 485, 888, 888, 144, 888, 888, 888, 554, 888, 888, 823, 823, 888, 888, 888, 823, 910, 888, 888, 482, 888, 888, 888, 888, 888, 554, 823, 888, 1095, 554, 910, 888, 208, 888, 945, 554, 1095, 945, 823, 554, 823, 823, 554, 823, 208, 823, 208, 554, 208, 823, 888, 1095, 482, 910, 683, 781, 144, 823, 888, 823, 888, 1095, 870, 870, 870, 683, 888, 683, 888, 823, 823, 823, 823, 823, 823, 823, 823, 823, 823, 823, 823, 144, 888, 144, 1095, 144, 210, 144, 823, 144, 888, 888, 888, 781, 208, 823, 888, 888, 888, 494, 888, 888, 888, 888, 558, 888, 888, 554, 494, 781, 888, 888, 823, 823, 888, 823, 823, 888, 888, 554, 888, 888, 210, 482, 888, 945, 888, 888, 210, 888, 888, 485, 781, 781, 781, 781, 781, 781, 781, 781, 1095, 1095, 823, 888, 888, 781, 888, 583, 1095, 210, 1095, 888, 823, 823, 888, 210, 888, 888, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 823, 888, 482, 210, 888, 910, 144, 210, 910, 888, 888, 888, 945, 945, 910, 1095, 945, 1095, 251, 144, 1095, 823, 823, 823, 823, 823, 888, 823, 823, 485, 888, 888, 823, 910, 888, 888, 888, 888, 888, 910, 586, 558, 888, 210, 888, 888, 910, 888, 408, 888, 586, 586, 888, 558, 823, 823, 343, 910, 823, 823, 823, 910, 945, 910, 910, 910, 910, 910, 910, 910, 910, 945, 910, 910, 945, 554, 945, 526, 208, 945, 945, 554, 888, 526, 945, 945, 945, 343, 945, 823, 1095, 482, 945, 945, 945, 945, 945, 945, 485, 910, 945, 888, 945, 945, 823, 945, 888, 888, 526, 267, 945, 945, 945, 378, 267, 378, 208, 208, 208, 910, 888, 945, 888, 945, 888, 945, 945, 888, 1095, 144, 888, 823, 267, 343, 888, 888, 823, 267, 1095, 888, 910, 485, 482, 482, 378, 482, 823, 378, 558, 208, 910, 910, 505, 505, 888, 208, 267, 1095, 888, 482, 144, 208, 683, 823, 781, 586, 823, 144, 823, 823, 823, 888, 888, 888, 558, 888, 494, 494, 823, 823, 823, 823, 823, 888, 888, 823, 823, 823, 586, 586, 586, 945, 210, 526, 210, 210, 210, 888, 210, 888, 888, 888, 823, 823, 823, 823, 823, 586, 586, 586, 586, 586, 586, 754, 586, 823, 210, 888, 888, 888, 210, 754, 754, 823, 343, 888, 823, 823, 823, 823, 823, 823, 823, 823, 823, 823, 823, 823, 888, 888, 558, 888, 558, 888, 344, 888, 558, 583, 888, 888, 558, 408, 823, 823, 554, 208, 208, 554, 823, 554, 554, 554, 823, 888, 823, 823, 823, 823, 683, 823, 823, 208, 144, 144, 1095, 554, 208, 888, 823, 554, 554, 823, 823, 823, 823, 823, 888, 888, 888, 823, 485, 888, 888, 888, 888, 910, 482, 888, 683, 888, 393, 888, 683, 683, 683, 482, 482, 482, 482, 482, 494, 1095, 1095, 1095, 865, 1095, 1095, 865, 482, 482, 210, 482, 482, 482, 251, 482, 482, 482, 823, 494, 494, 494, 494, 494, 494, 144, 888, 583, 583, 583, 583, 888, 1095, 910, 169, 169, 208, 888, 910, 208, 945, 267, 505, 888, 888, 558, 558, 558, 558, 284, 586, 485, 823, 823, 554, 823, 823, 823, 823, 823, 781, 823, 823, 823, 1095, 823, 823, 823, 823, 251, 823, 683, 823, 823, 823, 823, 823, 823, 823, 823, 823, 391, 823, 888, 910, 485, 888, 910, 888, 888, 888, 888, 910, 888, 408, 558, 888, 586, 267, 910, 910, 888, 888, 888, 910, 888, 888, 888, 343, 485, 485, 144, 888, 554, 554, 554, 888, 888, 888, 888, 888, 888, 888, 972, 910, 910, 888, 482, 482, 888, 888, 910, 888, 888, 888, 1095, 251, 393, 554, 823, 888, 1095, 781, 554, 910, 910, 910, 910, 210, 554, 554, 554, 554, 823, 554, 554, 554, 208, 823, 888, 1095, 1095, 1095, 1095, 1095, 781, 781, 781, 781, 781, 284, 284, 781, 144, 888, 888, 888, 823, 378, 378, 485, 1095, 870, 251, 485, 683, 251, 683, 378, 888, 888, 823, 823, 823, 823, 888, 284, 144, 910, 210, 210, 888, 144, 144, 910, 888, 888, 888, 251, 888, 888, 344, 781, 482, 781, 888, 494, 494, 494, 1095, 494, 494, 494, 888, 888, 888, 888, 558, 558, 558, 888, 888, 554, 910, 1095, 554, 888, 494, 888, 251, 554, 823, 554, 210, 210, 210, 210, 210, 888, 888, 888, 888, 284, 781, 1095, 888, 888, 284, 781, 284, 583, 210, 1095, 344, 393, 393, 408, 1095, 865, 1095, 888, 910, 910, 888, 945, 945, 945, 456, 910, 865, 251, 251, 823, 910, 910, 888, 888, 888, 586, 586, 586, 888, 888, 395, 133, 395, 910, 910, 910, 910, 910, 910, 910, 910, 408, 586, 888, 888, 251, 823, 910, 910, 910, 910, 910, 972, 910, 526, 910, 972, 910, 910, 554, 554, 945, 456, 393, 485, 945, 267, 378, 208, 945, 888, 558, 888, 558, 888, 910, 485, 823, 378, 378, 251, 395, 251, 251, 781, 888, 558, 823, 494, 823, 888, 251, 210, 210, 210, 210, 210, 210, 823, 823, 344, 344, 344, 144, 558, 554, 823, 554, 554, 438, 910, 972, 393, 494, 910, 267, 888, 558, 251, 823, 910, 485, 888, 888, 888, 910, 1095, 910, 554, 1095, 781, 888, 888, 888, 888, 888, 888, 284, 945, 456, 888, 910, 267, 558, 210, 344, 438]
email_43 = [17, 17, 17, 26, 17, 17, 17, 17, 17, 19, 17, 7, 17, 19, 1, 36, 38, 17, 17, 17, 17, 17, 17, 19, 17, 17, 17, 17, 8, 36, 23, 17, 19, 19, 17, 17, 17, 17, 17, 36, 17, 33, 17, 32, 17, 26, 17, 17, 36, 17, 17, 22, 17, 1, 36, 36, 26, 26, 26, 26, 29, 26, 26, 26, 26, 26, 26, 26, 26, 19, 26, 26, 17, 27, 7, 1, 36, 19, 36, 36, 22, 25, 25, 7, 36, 25, 1, 36, 1, 26, 13, 23, 1, 25, 25, 24, 17, 18, 1, 24, 27, 24, 17, 36, 36, 22, 36, 19, 19, 19, 19, 19, 19, 19, 38, 36, 19, 36, 19, 19, 19, 23, 19, 19, 38, 17, 36, 36, 36, 36, 31, 29, 17, 31, 31, 28, 25, 25, 7, 7, 7, 7, 32, 7, 7, 7, 7, 7, 7, 7, 7, 7, 16, 36, 31, 13, 23, 6, 32, 11, 19, 36, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 1, 1, 7, 1, 1, 22, 1, 1, 1, 36, 36, 36, 38, 36, 36, 36, 36, 36, 36, 36, 7, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 38, 38, 17, 17, 22, 17, 25, 31, 17, 25, 25, 22, 17, 25, 20, 25, 25, 22, 33, 25, 29, 17, 17, 17, 10, 25, 17, 23, 17, 17, 31, 38, 13, 22, 36, 23, 17, 17, 17, 36, 20, 17, 25, 7, 22, 13, 25, 27, 17, 38, 36, 22, 32, 38, 20, 22, 19, 17, 26, 38, 23, 26, 26, 38, 36, 36, 38, 36, 19, 36, 19, 38, 19, 19, 10, 32, 7, 20, 20, 33, 23, 36, 25, 36, 22, 20, 8, 8, 8, 15, 27, 15, 22, 36, 36, 36, 39, 36, 36, 39, 36, 36, 39, 36, 36, 23, 31, 23, 32, 23, 24, 23, 36, 23, 31, 22, 22, 33, 19, 36, 22, 42, 31, 16, 15, 27, 42, 25, 22, 22, 7, 38, 16, 33, 22, 42, 36, 36, 27, 36, 36, 22, 36, 38, 22, 22, 24, 7, 22, 26, 17, 31, 24, 31, 22, 10, 33, 33, 33, 33, 33, 33, 33, 33, 32, 32, 36, 22, 22, 33, 31, 6, 32, 24, 2, 37, 36, 36, 42, 24, 27, 25, 32, 32, 32, 32, 32, 32, 16, 32, 32, 22, 7, 24, 31, 30, 23, 24, 20, 22, 17, 22, 26, 26, 20, 23, 26, 32, 41, 23, 32, 36, 36, 36, 32, 36, 25, 36, 36, 10, 25, 31, 36, 20, 31, 17, 17, 22, 22, 20, 1, 22, 22, 24, 22, 5, 30, 25, 34, 1, 1, 1, 27, 22, 38, 36, 29, 30, 36, 36, 36, 20, 26, 30, 20, 20, 20, 20, 20, 20, 20, 26, 30, 30, 26, 38, 26, 12, 19, 26, 26, 38, 22, 12, 40, 26, 26, 29, 29, 7, 32, 7, 26, 26, 26, 26, 26, 26, 10, 30, 26, 22, 26, 26, 36, 26, 25, 42, 12, 27, 33, 26, 26, 27, 27, 27, 19, 19, 19, 30, 26, 22, 31, 26, 22, 26, 26, 22, 32, 23, 17, 36, 27, 36, 22, 22, 27, 27, 32, 22, 20, 10, 7, 7, 27, 7, 7, 27, 22, 19, 20, 20, 1, 1, 22, 19, 1, 32, 37, 7, 23, 19, 28, 36, 33, 1, 36, 23, 30, 36, 36, 31, 31, 27, 22, 22, 16, 16, 36, 36, 36, 36, 36, 25, 1, 36, 36, 36, 1, 1, 1, 26, 24, 12, 21, 24, 24, 13, 24, 13, 13, 13, 23, 23, 23, 23, 25, 1, 1, 1, 1, 1, 1, 18, 1, 36, 24, 25, 25, 25, 21, 18, 18, 27, 29, 17, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 7, 22, 22, 22, 22, 22, 22, 4, 22, 22, 6, 22, 31, 22, 34, 36, 36, 38, 19, 19, 38, 36, 38, 38, 38, 36, 31, 36, 36, 36, 39, 19, 36, 17, 19, 23, 23, 23, 38, 19, 31, 36, 38, 38, 36, 36, 39, 36, 36, 31, 5, 13, 36, 10, 25, 20, 22, 1, 20, 7, 42, 15, 31, 42, 1, 28, 28, 28, 7, 7, 7, 7, 7, 16, 32, 32, 25, 9, 32, 32, 9, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 16, 16, 16, 16, 16, 16, 23, 24, 6, 6, 6, 6, 31, 32, 30, 11, 11, 19, 22, 19, 19, 40, 27, 1, 22, 1, 22, 22, 22, 22, 36, 1, 10, 25, 36, 38, 36, 36, 36, 36, 36, 33, 36, 36, 36, 32, 7, 36, 36, 36, 41, 36, 15, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 17, 30, 10, 31, 20, 25, 25, 25, 25, 20, 22, 34, 22, 22, 1, 27, 20, 20, 22, 25, 22, 33, 25, 25, 25, 29, 10, 10, 23, 0, 38, 38, 38, 5, 13, 5, 22, 22, 17, 22, 20, 30, 20, 17, 7, 7, 22, 13, 20, 25, 25, 25, 32, 41, 42, 38, 36, 22, 32, 33, 38, 20, 20, 20, 20, 24, 38, 38, 38, 38, 38, 38, 38, 38, 19, 19, 10, 32, 32, 32, 32, 32, 33, 33, 33, 33, 33, 9, 9, 33, 23, 25, 25, 25, 36, 27, 27, 10, 8, 8, 41, 10, 15, 41, 41, 27, 22, 22, 36, 36, 36, 39, 23, 9, 23, 30, 24, 21, 24, 23, 23, 20, 22, 22, 9, 41, 22, 22, 4, 33, 33, 33, 22, 16, 16, 2, 16, 16, 16, 16, 27, 42, 42, 22, 22, 22, 22, 22, 7, 38, 20, 2, 38, 37, 16, 22, 41, 38, 38, 38, 24, 24, 21, 24, 24, 31, 31, 9, 22, 9, 33, 32, 22, 5, 9, 33, 9, 6, 21, 2, 4, 42, 42, 34, 32, 9, 32, 20, 20, 20, 22, 26, 26, 26, 35, 30, 9, 41, 41, 36, 20, 22, 34, 22, 9, 1, 1, 18, 22, 22, 3, 5, 3, 30, 30, 20, 30, 30, 30, 30, 30, 34, 1, 27, 27, 41, 38, 30, 20, 30, 20, 20, 20, 20, 12, 20, 20, 30, 30, 36, 38, 40, 35, 42, 10, 26, 27, 27, 19, 22, 22, 27, 22, 22, 22, 20, 10, 7, 27, 27, 41, 3, 41, 41, 33, 27, 22, 36, 16, 36, 1, 41, 41, 24, 24, 24, 24, 24, 23, 38, 4, 14, 14, 23, 22, 38, 36, 38, 36, 5, 30, 20, 42, 2, 30, 27, 1, 22, 41, 36, 20, 10, 0, 0, 0, 20, 32, 20, 38, 32, 33, 25, 23, 22, 9, 37, 22, 9, 26, 35, 34, 30, 27, 22, 24, 4, 5]
email_63 = [964, 964, 964, 9, 964, 964, 964, 964, 964, 964, 964, 1105, 964, 964, 604, 253, 1021, 964, 964, 964, 964, 964, 964, 964, 964, 964, 964, 964, 515, 253, 309, 964, 964, 964, 964, 964, 964, 964, 964, 253, 964, 397, 964, 0, 964, 9, 964, 964, 253, 964, 185, 335, 9, 604, 253, 253, 9, 9, 9, 9, 242, 9, 9, 9, 9, 9, 9, 9, 9, 964, 9, 9, 964, 1127, 1105, 604, 253, 964, 253, 253, 335, 964, 654, 1105, 583, 509, 604, 583, 509, 9, 982, 253, 509, 654, 509, 127, 964, 936, 509, 127, 1127, 127, 964, 253, 253, 185, 253, 964, 964, 964, 964, 964, 964, 964, 1021, 253, 964, 583, 964, 964, 964, 309, 964, 964, 1021, 964, 583, 253, 253, 583, 276, 242, 964, 276, 276, 36, 654, 654, 1105, 1105, 1105, 1105, 0, 1105, 1105, 1105, 1105, 1105, 1105, 1105, 335, 1105, 0, 253, 276, 982, 309, 185, 0, 932, 964, 583, 964, 964, 964, 964, 964, 964, 964, 964, 242, 964, 964, 964, 964, 964, 964, 964, 964, 964, 964, 964, 604, 604, 1105, 1127, 604, 476, 509, 604, 509, 253, 583, 253, 1021, 253, 253, 583, 583, 253, 253, 253, 253, 253, 583, 253, 253, 583, 253, 253, 583, 583, 253, 253, 583, 583, 253, 253, 583, 253, 583, 583, 1021, 1021, 1021, 770, 964, 335, 509, 654, 276, 964, 654, 964, 185, 964, 964, 315, 654, 654, 335, 447, 654, 242, 964, 964, 964, 694, 654, 964, 309, 964, 964, 276, 1021, 982, 185, 253, 309, 964, 964, 964, 253, 315, 964, 654, 1105, 185, 982, 964, 397, 964, 1021, 253, 185, 0, 964, 315, 185, 964, 185, 9, 1021, 309, 9, 9, 1021, 253, 583, 1021, 253, 964, 253, 964, 1021, 964, 583, 654, 0, 1105, 315, 36, 397, 757, 253, 654, 253, 185, 315, 515, 515, 515, 891, 1077, 891, 185, 253, 253, 253, 253, 253, 253, 253, 253, 253, 253, 583, 583, 309, 276, 309, 0, 309, 127, 309, 253, 309, 276, 185, 335, 397, 185, 583, 1127, 696, 276, 0, 253, 335, 696, 9, 476, 185, 1105, 1021, 0, 397, 185, 770, 253, 253, 335, 583, 253, 185, 253, 1021, 185, 185, 127, 1105, 185, 9, 964, 276, 127, 276, 185, 694, 397, 397, 397, 397, 397, 397, 397, 397, 0, 0, 253, 185, 397, 397, 276, 185, 0, 127, 0, 784, 253, 583, 565, 127, 397, 964, 0, 0, 0, 0, 0, 0, 0, 0, 0, 185, 1105, 127, 276, 315, 309, 127, 315, 476, 964, 185, 9, 9, 315, 309, 9, 0, 567, 309, 0, 253, 253, 253, 253, 253, 654, 583, 253, 694, 654, 276, 253, 315, 276, 185, 331, 185, 185, 315, 509, 476, 185, 127, 185, 331, 315, 335, 1058, 604, 509, 509, 604, 476, 1021, 253, 242, 315, 253, 253, 253, 315, 9, 315, 315, 315, 315, 276, 315, 315, 315, 9, 315, 315, 9, 1021, 9, 9, 964, 9, 9, 1021, 185, 9, 9, 9, 9, 242, 242, 253, 0, 1105, 9, 9, 9, 9, 9, 9, 694, 315, 456, 185, 9, 9, 583, 9, 654, 770, 9, 770, 509, 9, 9, 1077, 770, 1077, 476, 185, 964, 315, 654, 372, 276, 9, 185, 9, 9, 1127, 0, 309, 335, 253, 770, 242, 185, 1127, 1127, 1127, 0, 185, 315, 694, 1105, 1105, 1077, 1105, 848, 1077, 476, 964, 315, 315, 604, 604, 185, 964, 770, 0, 784, 1105, 309, 964, 36, 253, 509, 604, 1127, 309, 1127, 253, 583, 276, 276, 1035, 476, 604, 0, 0, 583, 253, 583, 583, 253, 509, 509, 583, 583, 583, 509, 509, 509, 9, 127, 9, 127, 127, 127, 982, 127, 332, 982, 982, 253, 253, 253, 253, 253, 509, 509, 509, 509, 509, 509, 936, 509, 583, 127, 654, 9, 654, 127, 936, 936, 1127, 242, 1127, 253, 253, 253, 253, 253, 253, 253, 583, 583, 583, 253, 253, 185, 185, 476, 476, 476, 185, 395, 185, 476, 185, 185, 276, 476, 1058, 253, 253, 1021, 964, 964, 1021, 1021, 1021, 1021, 1021, 253, 276, 253, 253, 253, 253, 36, 583, 583, 964, 309, 309, 1021, 1021, 964, 276, 253, 1021, 1021, 583, 583, 253, 583, 583, 276, 331, 982, 276, 694, 964, 276, 185, 509, 315, 1105, 654, 891, 276, 284, 509, 36, 36, 36, 1105, 1105, 1105, 1105, 1105, 0, 0, 0, 9, 927, 0, 0, 927, 1105, 1105, 127, 1105, 1105, 1105, 567, 1105, 1105, 1105, 1105, 0, 0, 0, 0, 0, 0, 694, 185, 185, 185, 185, 185, 276, 0, 315, 932, 932, 964, 185, 315, 964, 9, 770, 604, 185, 688, 476, 476, 476, 476, 509, 509, 694, 654, 253, 1021, 253, 583, 583, 253, 583, 397, 583, 583, 583, 0, 253, 583, 253, 583, 567, 694, 891, 253, 583, 583, 290, 583, 583, 253, 583, 583, 1021, 583, 657, 315, 694, 276, 315, 654, 654, 654, 654, 315, 185, 1058, 476, 185, 509, 770, 315, 315, 654, 654, 185, 447, 9, 654, 1127, 242, 694, 694, 309, 1021, 1021, 1021, 1021, 331, 982, 331, 185, 185, 964, 185, 276, 315, 315, 657, 1105, 1105, 185, 982, 315, 964, 964, 964, 0, 567, 565, 1021, 253, 185, 0, 509, 964, 315, 315, 315, 315, 127, 1021, 1021, 1021, 1021, 1021, 1021, 1021, 1021, 185, 583, 654, 0, 0, 0, 0, 0, 397, 397, 397, 397, 397, 397, 397, 397, 757, 912, 654, 654, 253, 1077, 1077, 694, 0, 515, 567, 694, 891, 567, 891, 1077, 185, 185, 253, 253, 253, 253, 713, 397, 276, 315, 127, 127, 127, 290, 309, 315, 185, 185, 1103, 567, 185, 335, 395, 397, 397, 397, 1127, 0, 0, 0, 0, 0, 0, 0, 335, 696, 696, 476, 476, 476, 476, 185, 1105, 1021, 315, 0, 1021, 784, 0, 185, 567, 1021, 1021, 1021, 127, 127, 127, 127, 127, 276, 276, 927, 476, 397, 397, 0, 185, 331, 397, 397, 397, 185, 127, 0, 395, 565, 565, 1058, 0, 927, 0, 276, 315, 315, 1006, 15, 9, 9, 309, 315, 927, 567, 567, 253, 315, 185, 1058, 185, 1103, 509, 509, 936, 185, 770, 332, 331, 332, 315, 315, 315, 315, 315, 315, 315, 315, 1058, 509, 604, 1035, 567, 1021, 315, 315, 315, 315, 315, 276, 315, 9, 315, 276, 315, 315, 1021, 1021, 9, 309, 565, 694, 456, 770, 1077, 964, 372, 185, 770, 1127, 476, 185, 315, 694, 848, 1077, 1077, 567, 332, 567, 567, 509, 1035, 476, 583, 0, 253, 509, 567, 567, 127, 127, 127, 127, 127, 253, 1021, 395, 395, 395, 276, 476, 1021, 253, 1021, 1021, 452, 315, 276, 284, 0, 315, 770, 688, 476, 567, 253, 315, 694, 1021, 1021, 1021, 315, 0, 315, 1021, 0, 397, 912, 713, 67, 1103, 642, 1006, 52, 15, 880, 6, 150, 267, 0, 475, 603, 452]
email_47 = [22, 22, 22, 21, 22, 22, 22, 22, 22, 13, 22, 31, 22, 13, 31, 40, 13, 22, 22, 22, 22, 22, 22, 13, 22, 22, 22, 22, 41, 40, 46, 22, 13, 13, 22, 22, 22, 22, 22, 40, 22, 29, 22, 29, 22, 21, 22, 22, 40, 22, 22, 4, 22, 22, 40, 40, 21, 21, 21, 21, 24, 21, 21, 21, 21, 21, 21, 21, 21, 13, 21, 21, 22, 40, 31, 31, 40, 13, 40, 40, 4, 13, 42, 31, 40, 22, 31, 40, 26, 21, 10, 40, 26, 12, 22, 12, 22, 25, 26, 22, 40, 22, 22, 40, 40, 9, 40, 13, 13, 13, 13, 13, 13, 13, 45, 40, 13, 40, 13, 13, 13, 46, 13, 13, 45, 22, 40, 40, 40, 40, 20, 24, 22, 20, 20, 17, 42, 22, 31, 31, 31, 31, 16, 31, 31, 31, 31, 31, 31, 31, 31, 31, 5, 40, 20, 10, 46, 2, 16, 38, 13, 40, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 31, 26, 31, 22, 31, 9, 26, 31, 26, 40, 40, 40, 45, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 17, 45, 45, 8, 22, 4, 26, 22, 20, 22, 42, 13, 9, 40, 13, 28, 42, 22, 4, 35, 42, 24, 22, 22, 22, 36, 22, 22, 46, 22, 22, 20, 45, 10, 9, 40, 46, 20, 22, 22, 40, 28, 22, 12, 31, 39, 10, 22, 46, 22, 24, 40, 22, 16, 45, 28, 9, 13, 22, 21, 45, 46, 21, 21, 45, 13, 40, 45, 40, 13, 40, 13, 45, 13, 40, 36, 16, 31, 28, 17, 29, 38, 40, 42, 40, 39, 22, 41, 41, 41, 3, 7, 3, 39, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 46, 20, 46, 29, 46, 12, 46, 40, 46, 20, 39, 39, 29, 39, 40, 9, 22, 20, 5, 40, 8, 22, 21, 9, 22, 31, 45, 5, 29, 39, 1, 40, 40, 8, 40, 40, 39, 40, 45, 39, 39, 12, 31, 22, 21, 22, 20, 12, 20, 22, 36, 29, 29, 29, 29, 29, 29, 29, 29, 16, 16, 40, 2, 5, 29, 29, 2, 16, 12, 16, 5, 40, 40, 29, 12, 31, 22, 29, 16, 29, 16, 16, 16, 5, 16, 40, 9, 31, 12, 20, 28, 46, 12, 28, 9, 22, 39, 21, 21, 28, 46, 21, 16, 33, 46, 16, 40, 40, 40, 40, 40, 42, 40, 40, 36, 42, 20, 40, 28, 20, 22, 0, 9, 9, 28, 26, 9, 39, 12, 9, 43, 28, 4, 39, 22, 26, 26, 8, 9, 45, 40, 24, 28, 40, 40, 40, 28, 21, 28, 21, 28, 28, 28, 28, 28, 28, 21, 28, 28, 21, 45, 21, 21, 13, 21, 21, 45, 21, 21, 27, 21, 21, 24, 24, 40, 29, 31, 21, 21, 21, 21, 21, 21, 36, 28, 44, 39, 21, 21, 40, 21, 46, 1, 21, 8, 20, 21, 21, 7, 8, 7, 13, 13, 13, 28, 21, 30, 20, 21, 9, 21, 21, 9, 16, 46, 8, 40, 8, 24, 9, 9, 40, 8, 16, 9, 28, 36, 31, 31, 7, 31, 37, 7, 9, 13, 28, 28, 31, 31, 9, 13, 8, 16, 12, 31, 46, 13, 17, 40, 29, 26, 22, 46, 40, 40, 40, 20, 20, 20, 9, 31, 5, 5, 40, 40, 40, 40, 40, 26, 26, 40, 40, 40, 26, 26, 26, 21, 12, 21, 12, 12, 12, 10, 12, 22, 10, 10, 40, 40, 40, 40, 40, 26, 26, 26, 26, 26, 26, 25, 26, 40, 12, 12, 21, 42, 12, 25, 25, 40, 24, 22, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 9, 9, 9, 9, 9, 2, 6, 39, 9, 2, 9, 20, 9, 9, 40, 40, 45, 13, 13, 45, 40, 45, 45, 45, 40, 20, 40, 40, 40, 40, 17, 40, 22, 13, 46, 46, 40, 45, 13, 20, 40, 45, 45, 40, 40, 40, 40, 40, 20, 43, 10, 20, 2, 13, 28, 39, 26, 28, 31, 1, 3, 20, 18, 26, 10, 17, 3, 31, 31, 31, 31, 31, 5, 16, 16, 21, 0, 16, 29, 0, 31, 31, 12, 31, 31, 31, 31, 31, 31, 31, 31, 5, 5, 5, 5, 5, 5, 46, 12, 2, 2, 2, 2, 20, 16, 28, 38, 38, 13, 39, 28, 13, 27, 8, 31, 39, 22, 9, 9, 9, 9, 29, 26, 36, 22, 40, 45, 40, 40, 40, 40, 40, 29, 40, 40, 40, 16, 40, 40, 40, 40, 33, 40, 3, 40, 40, 40, 20, 40, 40, 40, 40, 40, 17, 40, 22, 28, 36, 20, 28, 42, 42, 42, 42, 28, 39, 39, 9, 39, 26, 8, 28, 28, 42, 42, 39, 35, 22, 42, 42, 24, 36, 36, 2, 46, 45, 45, 45, 43, 22, 43, 9, 21, 20, 2, 28, 28, 28, 22, 31, 31, 39, 10, 28, 22, 22, 22, 16, 33, 23, 24, 40, 21, 19, 29, 45, 28, 28, 28, 28, 12, 45, 45, 45, 45, 40, 45, 45, 45, 39, 40, 20, 16, 16, 16, 16, 16, 29, 29, 29, 29, 29, 29, 29, 29, 38, 42, 42, 42, 40, 7, 7, 36, 29, 41, 33, 36, 3, 33, 33, 7, 39, 9, 40, 40, 40, 40, 22, 29, 32, 28, 12, 12, 12, 20, 46, 28, 39, 39, 39, 33, 39, 39, 6, 29, 29, 29, 9, 5, 5, 5, 5, 5, 5, 5, 8, 22, 22, 9, 9, 9, 9, 39, 31, 45, 28, 5, 45, 5, 5, 39, 33, 45, 45, 45, 12, 12, 12, 12, 12, 20, 20, 0, 9, 29, 29, 16, 2, 43, 29, 29, 29, 2, 12, 5, 6, 23, 23, 39, 16, 0, 16, 20, 28, 28, 15, 14, 21, 21, 11, 28, 0, 33, 33, 40, 28, 28, 39, 9, 29, 26, 26, 25, 9, 9, 43, 43, 43, 28, 28, 28, 28, 28, 28, 28, 28, 39, 26, 8, 8, 33, 45, 28, 28, 28, 28, 28, 28, 28, 21, 28, 28, 28, 28, 45, 45, 27, 11, 23, 36, 44, 8, 7, 13, 30, 9, 8, 9, 9, 9, 28, 36, 37, 7, 7, 33, 43, 33, 33, 29, 20, 9, 40, 40, 40, 26, 33, 33, 12, 12, 12, 12, 12, 40, 45, 6, 6, 6, 32, 9, 45, 40, 45, 40, 34, 28, 28, 18, 5, 28, 8, 22, 9, 33, 40, 28, 36, 46, 46, 46, 28, 19, 28, 45, 16, 29, 42, 22, 39, 39, 5, 15, 29, 14, 11, 39, 28, 8, 9, 12, 6, 34]
cora_284 = [161, 1883, 1214, 1214, 41, 1530, 1530, 161, 161, 1488, 2033, 119, 35, 1017, 161, 2011, 1214, 1576, 877, 1705, 474, 1214, 2011, 1702, 1214, 474, 1486, 35, 1195, 1856, 978, 161, 978, 221, 1214, 1214, 221, 2011, 2011, 1214, 1488, 1244, 2011, 652, 2012, 1530, 1570, 1499, 991, 1809, 1809, 35, 2012, 262, 1214, 380, 707, 1214, 2048, 652, 1214, 2026, 616, 1214, 1153, 1317, 482, 65, 533, 482, 1227, 1317, 1486, 1486, 1705, 1449, 1875, 1694, 1875, 1452, 1576, 213, 1214, 1214, 35, 1214, 77, 1499, 2012, 2012, 1614, 1486, 2052, 1702, 1244, 1702, 1169, 2033, 18, 324, 1666, 610, 672, 1214, 1486, 1203, 790, 41, 41, 87, 877, 733, 265, 1486, 87, 1244, 2012, 1119, 1214, 2012, 2011, 351, 877, 911, 877, 242, 890, 877, 1214, 2011, 474, 1875, 1694, 1614, 1214, 1883, 2052, 1244, 1244, 2011, 834, 2011, 1576, 1694, 2011, 2011, 1576, 1917, 191, 482, 1809, 1345, 2011, 1214, 1875, 35, 2012, 1875, 1800, 2052, 242, 1702, 1214, 2011, 1317, 747, 40, 1214, 1071, 652, 41, 87, 2012, 1214, 1856, 1486, 1611, 2012, 756, 1614, 733, 1875, 1877, 1773, 1800, 616, 1214, 213, 2011, 2011, 2033, 2011, 2033, 2033, 1442, 93, 93, 1214, 1486, 474, 931, 1576, 1486, 1263, 1486, 1590, 328, 1214, 2012, 2011, 1214, 1966, 652, 1530, 1875, 482, 696, 1486, 1990, 2011, 1530, 911, 1809, 2012, 213, 2012, 1288, 1576, 1234, 1214, 1576, 978, 161, 351, 1486, 1486, 2012, 2011, 1570, 1214, 2026, 833, 1363, 262, 2052, 2012, 1875, 2011, 1203, 77, 41, 216, 1214, 1570, 1708, 87, 2012, 1075, 161, 1234, 1966, 877, 2011, 1705, 2012, 1666, 2011, 474, 161, 1214, 65, 1614, 1712, 1937, 1214, 65, 65, 1214, 616, 65, 2033, 191, 134, 1214, 1153, 978, 756, 87, 482, 978, 2011, 2011, 1244, 652, 1214, 1214, 1452, 406, 1214, 1112, 1222, 1570, 747, 1950, 41, 1214, 1214, 696, 474, 2011, 1320, 1214, 35, 1789, 642, 1486, 1883, 965, 1735, 1856, 1234, 855, 447, 834, 616, 35, 616, 616, 1486, 2011, 652, 1890, 616, 1214, 474, 1990, 1486, 1694, 679, 65, 1419, 1419, 65, 2011, 1883, 1705, 1694, 35, 1984, 1486, 733, 733, 1244, 1486, 652, 443, 2033, 262, 1702, 1263, 1576, 380, 556, 1694, 840, 840, 840, 1214, 1486, 1486, 1214, 1320, 1937, 77, 1214, 1173, 1705, 1705, 1990, 1611, 2011, 2012, 1922, 1590, 161, 1214, 877, 652, 2033, 616, 2011, 1576, 1875, 161, 1614, 2011, 1214, 1486, 1203, 1093, 1575, 2012, 2011, 640, 672, 2004, 1576, 1581, 1123, 84, 1214, 6, 1214, 1614, 1883, 2011, 1244, 965, 1883, 1203, 2033, 87, 2011, 1457, 282, 1214, 1856, 1576, 747, 2011, 2012, 2012, 747, 1800, 1491, 161, 2012, 161, 1452, 2033, 1214, 1590, 2012, 161, 2011, 1735, 1214, 1123, 2011, 1590, 221, 1210, 1119, 87, 1773, 1214, 87, 40, 877, 474, 191, 1576, 213, 1214, 65, 1214, 1214, 65, 1877, 1875, 1214, 1214, 1363, 1214, 2012, 1071, 860, 1214, 1214, 1917, 1075, 1488, 1017, 1214, 1705, 1015, 978, 2011, 87, 1570, 1530, 1877, 1530, 1576, 1576, 65, 1856, 1214, 41, 41, 2011, 1856, 1214, 1856, 524, 1214, 87, 1695, 965, 642, 2033, 1705, 6, 1119, 87, 378, 1712, 1069, 1875, 2033, 1576, 19, 533, 1214, 1620, 1841, 1486, 911, 424, 1419, 2011, 328, 35, 1244, 1789, 1363, 2048, 2011, 2011, 1773, 1056, 1773, 455, 1056, 161, 1486, 2011, 2012, 1214, 87, 1452, 1536, 1214, 911, 1214, 1575, 1575, 1457, 1457, 1214, 1875, 1486, 1214, 2011, 1214, 1214, 1214, 1214, 1214, 87, 652, 282, 265, 65, 1363, 1214, 652, 1426, 1017, 1486, 1873, 1809, 2059, 1153, 41, 1990, 1195, 1320, 1214, 134, 840, 87, 134, 1222, 1222, 351, 1112, 790, 747, 1486, 1590, 1214, 2011, 1056, 1705, 860, 2011, 1452, 1614, 906, 1486, 1614, 978, 161, 1575, 1575, 161, 1288, 1214, 1966, 1486, 1214, 1705, 378, 119, 119, 877, 679, 1486, 911, 1123, 1590, 2012, 1214, 2012, 2012, 1390, 378, 1590, 41, 474, 1705, 1705, 1809, 1214, 35, 221, 213, 1123, 1169, 1363, 2012, 77, 1214, 1883, 1486, 191, 191, 1576, 119, 2012, 1705, 1875, 1856, 733, 1576, 877, 1075, 1614, 642, 1056, 1214, 1363, 1442, 1576, 1883, 860, 1317, 424, 978, 1614, 2011, 1214, 2012, 1841, 1486, 2012, 877, 1214, 1634, 1735, 191, 1452, 1123, 41, 1486, 1486, 1705, 1576, 1214, 119, 2011, 524, 1390, 1705, 2033, 87, 93, 161, 1419, 1452, 1015, 2011, 1702, 2011, 35, 1875, 2011, 1614, 906, 1452, 2011, 1590, 1214, 2065, 991, 1263, 2011, 2011, 65, 733, 1113, 474, 1214, 1530, 696, 161, 1692, 1214, 1214, 1317, 877, 35, 1317, 1317, 877, 161, 1486, 1244, 1214, 2052, 161, 1169, 84, 1214, 2011, 1611, 2011, 1666, 1702, 2012, 1488, 2012, 833, 1390, 2011, 1875, 87, 35, 1390, 733, 1486, 35, 191, 1890, 1214, 1203, 1244, 474, 455, 1037, 2011, 1426, 363, 1882, 363, 474, 275, 389, 2011, 1715, 474, 1102, 2011, 216, 216, 1543, 1486, 1102, 1987, 2011, 1789, 1152, 262, 1317, 2048, 1017, 1214, 1113, 406, 973, 933, 406, 2011, 406, 2011, 455, 1873, 1873, 1873, 571, 1890, 1227, 1576, 1727, 1727, 1856, 1966, 1856, 571, 571, 1823, 221, 2011, 652, 1214, 1173, 511, 188, 652, 1875, 35, 1214, 1214, 380, 1882, 2011, 447, 447, 892, 1882, 1103, 1882, 213, 415, 1882, 2011, 1873, 1099, 1069, 2011, 1491, 363, 1113, 1614, 216, 426, 1705, 191, 1875, 1214, 1705, 652, 652, 652, 1214, 87, 642, 991, 533, 2011, 455, 1214, 1773, 87, 1823, 610, 709, 1244, 1244, 426, 275, 1244, 19, 1702, 1173, 1244, 1875, 41, 1614, 2011, 1112, 933, 1103, 1244, 275, 1705, 571, 406, 1966, 933, 1708, 35, 1966, 1712, 389, 1320, 1882, 571, 406, 652, 873, 1646, 1646, 1363, 1426, 679, 363, 709, 1317, 1230, 1473, 216, 1214, 2011, 2011, 23, 1856, 2011, 310, 2011, 2011, 2011, 2011, 1073, 389, 1576, 363, 2017, 1598, 35, 475, 378, 23, 221, 87, 415, 447, 1536, 2011, 1990, 2011, 877, 1883, 933, 933, 933, 447, 1530, 221, 1214, 1966, 23, 1152, 1214, 1614, 275, 1715, 533, 533, 1614, 933, 2011, 709, 965, 2052, 213, 1705, 23, 1263, 2048, 1099, 1708, 1152, 1708, 415, 1702, 2012, 35, 1473, 87, 1708, 709, 474, 474, 2012, 1363, 511, 642, 2011, 642, 642, 1214, 393, 860, 1882, 2011, 1705, 2011, 363, 363, 931, 2017, 991, 117, 87, 1102, 707, 328, 991, 2011, 161, 447, 1950, 415, 2011, 2011, 328, 1875, 1708, 1708, 406, 328, 328, 406, 1214, 507, 507, 965, 1662, 242, 221, 221, 1473, 2011, 1452, 860, 1631, 1089, 1452, 2011, 642, 1230, 2011, 378, 2011, 221, 652, 1263, 2011, 2011, 1662, 652, 642, 87, 1875, 1385, 2011, 1385, 1614, 406, 19, 19, 378, 1099, 1662, 337, 1598, 1614, 1708, 991, 860, 1227, 443, 443, 1102, 2011, 275, 2011, 2011, 931, 363, 2052, 1614, 1883, 1102, 2011, 2012, 401, 363, 2011, 363, 679, 2011, 1448, 571, 161, 1448, 1214, 455, 556, 1017, 1222, 1708, 912, 1873, 1153, 2011, 41, 406, 2011, 933, 389, 906, 137, 1883, 2011, 1214, 1017, 1037, 933, 35, 2011, 2011, 134, 971, 571, 35, 978, 971, 971, 196, 1773, 2011, 709, 363, 393, 877, 1841, 2011, 845, 1715, 1781, 978, 35, 1590, 845, 698, 1152, 1620, 1069, 242, 389, 363, 1950, 2011, 1708, 1136, 415, 1576, 1136, 474, 642, 1214, 380, 1227, 389, 1856, 1708, 191, 406, 927, 855, 1214, 1222, 455, 1875, 1345, 1069, 1841, 652, 35, 1214, 455, 2011, 2011, 2011, 2011, 213, 1773, 1773, 652, 1873, 1214, 1153, 1727, 2011, 1029, 2011, 2011, 1227, 2011, 406, 1073, 2011, 2011, 927, 1008, 191, 406, 415, 415, 415, 1646, 1715, 2012, 1008, 1856, 927, 1467, 35, 35, 310, 652, 1984, 652, 652, 652, 1214, 2011, 1093, 1093, 571, 933, 1230, 1702, 213, 2011, 652, 19, 1883, 1448, 1883, 1715, 137, 873, 1173, 1073, 389, 87, 2012, 2012, 2017, 1856, 2011, 1990, 401, 2011, 978, 2011, 87, 2017, 2017, 1576, 1576, 1530, 2011, 275, 41, 1875, 927, 1875, 1662, 1182, 389, 610, 87, 1950, 2004, 2011, 1113, 1345, 709, 2011, 1708, 2011, 242, 1631, 401, 389, 242, 933, 1883, 2012, 1214, 1614, 1214, 1708, 1576, 389, 1113, 406, 1883, 971, 1966, 2011, 1203, 1590, 363, 1662, 698, 698, 698, 2011, 2011, 1073, 707, 1073, 1882, 1491, 1875, 406, 1113, 474, 507, 507, 2017, 35, 911, 1029, 196, 978, 1614, 1214, 1708, 1250, 1075, 1609, 87, 1631, 1102, 1473, 2011, 474, 474, 406, 1320, 1873, 1773, 2011, 2052, 1448, 1244, 1320, 1875, 1875, 1214, 1789, 1214, 2011, 2011, 652, 2012, 2053, 2053, 1987, 1363, 1467, 707, 1890, 1103, 389, 2011, 275, 447, 714, 1214, 275, 2053, 1473, 447, 475, 447, 679, 2011, 1576, 1473, 363, 137, 1536, 2011, 455, 363, 2052, 389, 401, 1646, 1890, 1263, 1841, 507, 1890, 1856, 672, 2011, 1841, 1708, 1841, 1883, 213, 1227, 474, 933, 1102, 213, 328, 1173, 275, 1214, 262, 1214, 2011, 1883, 1214, 1883, 1883, 2017, 23, 1222, 87, 1113, 2017, 1875, 1773, 1620, 2011, 474, 1856, 188, 1214, 1363, 1609, 1856, 1473, 931, 1708, 2011, 2011, 447, 474, 931, 1123, 991, 2011, 2011, 1789, 415, 571, 1073, 2052, 1363, 933, 1227, 1873, 1227, 571, 642, 1426, 1614, 511, 328, 1103, 242, 213, 2017, 415, 1873, 1873, 978, 242, 1227, 1123, 275, 401, 401, 216, 401, 401, 1614, 134, 1715, 1609, 1598, 363, 2011, 23, 2011, 1307, 2011, 1883, 652, 1227, 87, 2011, 652, 401, 652, 1966, 1345, 1214, 2011, 709, 1426, 2011, 978, 911, 2011, 911, 1614, 1590, 1214, 714, 1789, 1966, 2011, 337, 1214, 1576, 1875, 65, 1841, 1712, 1112, 1112, 1112, 1841, 911, 191, 2011, 1317, 1715, 447, 1875, 262, 1614, 1614, 912, 912, 363, 642, 1491, 2011, 1037, 933, 1705, 2011, 1173, 1576, 642, 1614, 1634, 23, 337, 2011, 35, 1214, 707, 642, 1448, 933, 933, 221, 2004, 1609, 2011, 1345, 1984, 978, 1037, 1214, 6, 213, 65, 1448, 2017, 1103, 84, 1073, 1598, 642, 328, 2011, 1307, 1781, 1781, 406, 1214, 2012, 1227, 1781, 1136, 1222, 1883, 2012, 1841, 1634, 35, 1917, 2011, 1543, 455, 1071, 1214, 1123, 1705, 1987, 709, 1875, 2011, 406, 1056, 337, 1789, 191, 213, 1486, 2011, 1362, 1250, 191, 2011, 642, 443, 1987, 1882, 2012, 1113, 1856, 87, 443, 378, 87, 2011, 2011, 1317, 1773, 906, 1317, 1614, 1008, 2011, 1598, 1614, 933, 1708, 2011, 1214, 556, 1491, 642, 1708, 900, 900, 1317, 642, 2011, 511, 1214, 415, 2011, 415, 2011, 1227, 191, 2011, 1708, 2011, 1317, 2012, 1987, 877, 221, 1715, 1317, 877, 474, 1987, 1727, 2011, 652, 1113, 23, 87, 1244, 188, 2011, 1244, 2011, 973, 2011, 892, 642, 1781, 1781, 1614, 873, 642, 1214, 2011, 2011, 415, 1244, 213, 1244, 2011, 709, 415, 415, 2011, 447, 2011, 1214, 991, 2012, 608, 2011, 1392, 1203, 474, 2011, 696, 2025, 1863, 556, 973, 1614, 1755, 389, 1576, 512, 833, 890, 282, 41, 665, 665, 1576, 2011, 2011, 2011, 665, 2011, 1650, 1225, 1003, 1225, 2052, 829, 1692, 533, 533, 2012, 1214, 991, 380, 2011, 1452, 1263, 1225, 717, 1214, 1214, 2059, 1225, 1225, 1225, 2011, 2011, 692, 2011, 1274, 652, 829, 324, 1019, 1019, 1075, 2011, 1590, 924, 1576, 1486, 363, 1856, 652, 1570, 1214, 649, 1856, 2012, 1576, 652, 911, 2012, 1345, 533, 1634, 1112, 1981, 1705, 924, 1335, 1335, 2012, 2011, 474, 1335, 1922, 1015, 632, 632, 1214, 389, 1987, 533, 533, 1210, 1210, 474, 382, 2011, 1856, 324, 1099, 1449, 1449, 1705, 242, 323, 1214, 1214, 1099, 1345, 1345, 1449, 161, 1708, 973, 1705, 973, 1244, 1263, 2011, 16, 566, 1581, 1345, 1883, 161, 833, 640, 448, 553, 2011, 877, 877, 877, 877, 1695, 902, 2011, 1581, 1576, 672, 1966, 672, 1856, 474, 1742, 363, 585, 1274, 877, 2065, 1809, 2011, 1705, 1274, 1015, 337, 596, 2011, 41, 1244, 1576, 1569, 877, 2011, 927, 511, 566, 137, 652, 104, 1705, 278, 1244, 1210, 104, 453, 1250, 137, 877, 1426, 1457, 1614, 2011, 378, 665, 1650, 2011, 1244, 1096, 2011, 1590, 65, 2011, 2012, 1392, 1820, 1536, 1099, 1856, 161, 855, 135, 696, 1214, 1536, 2011, 1820, 376, 1112, 756, 1345, 2011, 533, 1486, 1003, 2011, 612, 2011, 820, 2011, 1075, 1052, 1449, 1244, 1244, 533, 2011, 1569, 1244, 932, 278, 415, 1227, 1362, 1418, 553, 351, 1244, 1244, 65, 1274, 1274, 341, 341, 16, 1993, 65, 2011, 1244, 1993, 1363, 1099, 1345, 533, 443, 1259, 1990, 474, 672, 1705, 1981, 1856, 65, 337, 1981, 1263, 242, 1499, 443, 672, 1692, 1244, 652, 1214, 474, 1856, 1317, 1883, 1883, 2012, 1856, 1099, 18, 35, 2052, 2011, 1363, 608, 2012, 1075, 1576, 1590, 161, 640, 1449, 1486, 1614, 2011, 1873, 87, 87, 1614, 1875, 1715, 2011, 87, 1873, 482, 1873, 1768, 829, 415, 2052, 2059, 443, 1966, 205, 924, 1075, 1856, 1362, 1449, 1966, 1317, 932, 1883, 927, 596, 1225, 1112, 1362, 443, 415, 2011, 1966, 1448, 1883, 1590, 87, 351, 2011, 1875, 1690, 1274, 87, 87, 376, 1429, 2011, 2011, 640, 336, 696, 161, 1742, 1590, 1112, 640, 840, 612, 104, 65, 1225, 1213, 1214, 1313, 692, 1511, 1449, 1449, 104, 1225, 1626, 1662, 1576, 1089, 1317, 1576, 1922, 278, 1827, 672, 1294, 2012, 973, 1536, 1742, 1099, 1690, 1225, 1966, 1052, 474, 1263, 1294, 135, 855, 35, 137, 1244, 1313, 87, 87, 482, 978, 596, 1203, 1203, 612, 382, 2011, 2011, 1966, 1966, 474, 927, 2011, 1883, 2052, 1390, 1390, 2011, 1576, 2011, 1225, 855, 2012, 1225, 474, 855, 2052, 1590, 1781, 328, 135, 135, 135, 556, 2012, 2011, 135, 756, 2011, 2012, 1715, 380, 2011, 1390, 2011, 1797, 1390, 2011, 278, 1452, 890, 1052, 1590, 415, 1511, 1626, 2033, 1883, 632, 511, 1499, 443, 1536, 1214, 855, 2033, 1112, 213, 1536, 1075, 443, 1883, 1875, 1032, 2011, 1390, 890, 890, 331, 2011, 2011, 1320, 1823, 1274, 596, 1499, 1499, 1499, 474, 682, 2011, 2011, 2011, 2011, 137, 1626, 2011, 1576, 2012, 2011, 1576, 2011, 1614, 2011, 331, 682, 1599, 2011, 1705, 2011, 556, 137, 1075, 2011, 1708, 1363, 2011, 556, 978, 137, 1182, 1075, 2011, 137, 511, 1182, 1182, 973, 2011, 1875, 512, 1019, 1990, 1990, 363, 378, 933, 2011, 2011, 406, 2011, 1449, 1917, 1274, 640, 1099, 406, 855, 1486, 1650, 2026, 2011, 1735, 973, 19, 890, 328, 87, 1317, 137, 1244, 1576, 1099, 1781, 1263, 389, 965, 877, 965, 1856, 1214, 927, 1071, 282, 2011, 672, 2011, 1705, 1075, 911, 117, 1883, 1614, 389, 2012, 2012, 1890, 1099, 1345, 2011, 991, 453, 474, 1650, 1614, 2011, 1575, 833, 474, 1113, 1921, 482, 1363, 2011, 1244, 2011, 363, 135, 596, 2012, 1214, 1362, 1781, 1153, 1153, 1320, 1320, 596, 1263, 1877, 1614, 278, 1015, 2011, 1705, 1576, 1872, 1298, 689, 689, 596, 1705, 1705, 1695, 278, 1856, 1695, 780, 2011, 1797, 2052, 2052, 877, 1418, 137, 1169, 1214, 1797, 932, 1071, 1052, 2052, 1486, 1210, 1576, 1320, 1320, 679, 596, 1875, 1099, 389, 927, 1705, 1263, 213, 1883, 616, 511, 1695, 2012, 137, 1214, 511, 1614, 1576, 1203, 331, 696, 1576, 2052, 1581, 2052, 1883, 1214, 2012, 2011, 556, 2011, 1990, 1420, 448, 448, 2011, 1614, 1576, 1089, 87, 991, 2011, 596, 911, 1872, 1385, 1227, 1457, 649, 1590, 1823, 87, 87, 717, 1429, 1499, 1214, 1536, 616, 474, 1214, 221, 1536, 1576, 1214, 323, 1449, 474, 213, 1214, 612, 2012, 596, 1153, 2011, 1569, 585, 1883, 1768, 282, 161, 1569, 1263, 1263, 1263, 1614, 2011, 1921, 2011, 1263, 596, 1320, 2012, 87, 1244, 1099, 1250, 1320, 1015, 1993, 2011, 107, 2011, 1599, 482, 2011, 556, 266, 1966, 1966, 1420, 696, 323, 933, 679, 616, 1875, 107, 1259, 1576, 1214, 1210, 877, 1883, 242, 1590, 331, 2052, 978, 1225, 65, 585, 1695, 2033, 1590, 1214, 652, 1581, 2011, 216, 1809, 2012, 221, 35, 216, 1015, 1614, 2011, 2011, 482, 616, 1263, 978, 1576, 1075, 161, 840, 1096, 161, 596, 221, 2012, 324, 1075, 2012, 1169, 213, 672, 1355, 924, 612, 19, 1274, 1883, 2033, 1626, 324, 2012, 1486, 1614, 610, 2012, 1071, 612, 1536, 1030, 205, 1755, 1071, 475, 911, 1362, 2033, 1883, 911, 911, 2065, 1755, 213, 1362, 213, 1883, 87, 1003, 820, 336, 2012, 612, 137, 2065, 1987, 213, 1214, 1214, 1634, 1030, 1355, 474, 1345, 1032, 1917, 2026, 2011, 1213, 205, 2011, 1214, 1429, 1827, 1449, 1429, 1214, 902, 696, 1486, 87, 2026, 474, 1705, 1052, 1987, 1715, 1214, 1317, 1426, 596, 911, 1883, 2011, 780, 1210, 2011, 135, 610, 1570, 1570, 1214, 2011, 2052, 1345, 1298, 337, 221, 324, 610, 242, 991, 1576, 266, 87, 610, 1390, 632, 1052, 87, 2025, 2052, 1244, 282, 1715, 18, 512, 512, 1244, 512, 682, 455, 2011, 2011, 632, 1863, 1890]
cora_243 = [261, 120, 38, 38, 139, 455, 28, 261, 261, 19, 179, 847, 16, 217, 261, 280, 38, 751, 133, 55, 405, 38, 243, 163, 38, 134, 548, 16, 288, 48, 351, 139, 351, 64, 38, 38, 64, 243, 243, 38, 19, 163, 243, 166, 697, 293, 305, 376, 8, 366, 366, 16, 181, 181, 38, 167, 74, 38, 170, 166, 60, 2, 100, 38, 351, 122, 20, 445, 1149, 20, 105, 24, 548, 548, 122, 97, 139, 23, 151, 194, 280, 625, 38, 548, 16, 38, 580, 376, 427, 697, 71, 457, 6, 1516, 163, 1516, 359, 179, 386, 143, 414, 140, 1144, 38, 548, 277, 105, 139, 139, 232, 457, 1281, 847, 548, 232, 163, 697, 9, 38, 697, 243, 303, 117, 424, 117, 111, 1533, 117, 38, 280, 410, 139, 23, 29, 38, 380, 6, 163, 163, 243, 89, 243, 751, 23, 243, 243, 751, 58, 38, 20, 366, 91, 280, 38, 139, 16, 697, 151, 286, 6, 111, 1516, 38, 243, 24, 286, 359, 38, 440, 166, 139, 232, 697, 38, 55, 548, 120, 697, 384, 266, 23, 139, 75, 94, 286, 100, 38, 32, 243, 243, 179, 243, 179, 179, 183, 105, 105, 38, 548, 410, 170, 1281, 548, 255, 548, 548, 378, 548, 697, 176, 38, 156, 166, 293, 151, 291, 88, 548, 120, 243, 293, 173, 366, 697, 91, 697, 279, 751, 89, 38, 751, 351, 349, 303, 548, 548, 697, 243, 305, 38, 2, 338, 410, 181, 6, 697, 151, 243, 277, 580, 139, 28, 60, 2, 1174, 481, 697, 438, 261, 89, 156, 122, 243, 122, 697, 414, 243, 405, 349, 38, 445, 29, 71, 243, 38, 445, 445, 38, 100, 445, 179, 421, 30, 38, 351, 351, 384, 410, 20, 351, 243, 280, 163, 166, 38, 38, 194, 315, 38, 708, 246, 305, 286, 6, 139, 38, 38, 286, 134, 243, 161, 751, 16, 1792, 199, 548, 120, 230, 58, 48, 89, 386, 91, 89, 100, 16, 100, 100, 401, 243, 166, 266, 100, 38, 405, 120, 548, 23, 105, 445, 140, 140, 445, 243, 120, 122, 23, 16, 152, 548, 1281, 1281, 163, 751, 166, 594, 179, 181, 1516, 255, 170, 167, 41, 23, 181, 129, 181, 38, 548, 548, 38, 161, 243, 580, 332, 48, 156, 122, 120, 120, 243, 697, 163, 268, 261, 38, 457, 166, 179, 100, 243, 751, 139, 151, 29, 243, 38, 91, 277, 1482, 254, 697, 243, 409, 1144, 353, 751, 58, 162, 353, 38, 170, 60, 266, 120, 243, 163, 230, 380, 277, 179, 481, 243, 82, 55, 38, 48, 751, 286, 42, 697, 697, 286, 286, 113, 261, 697, 261, 194, 179, 60, 315, 697, 261, 353, 58, 38, 162, 243, 268, 64, 38, 9, 380, 94, 332, 134, 359, 457, 410, 421, 751, 32, 38, 445, 38, 38, 445, 75, 151, 38, 38, 410, 38, 697, 440, 539, 38, 38, 58, 438, 19, 217, 38, 156, 291, 351, 280, 232, 305, 293, 75, 293, 751, 751, 445, 55, 38, 139, 139, 243, 55, 38, 55, 38, 122, 380, 188, 230, 199, 179, 266, 170, 9, 380, 129, 71, 100, 139, 179, 751, 6, 486, 38, 203, 486, 548, 424, 257, 140, 243, 235, 16, 163, 1792, 134, 170, 243, 280, 94, 72, 94, 264, 72, 261, 548, 243, 697, 38, 410, 105, 200, 38, 424, 38, 254, 254, 82, 82, 38, 151, 751, 60, 243, 38, 38, 38, 38, 38, 380, 166, 55, 847, 445, 410, 38, 166, 151, 217, 548, 181, 366, 39, 351, 139, 120, 288, 427, 38, 30, 181, 410, 30, 246, 246, 303, 708, 105, 286, 548, 548, 38, 243, 72, 122, 539, 243, 77, 29, 548, 548, 266, 196, 349, 254, 254, 349, 279, 38, 156, 548, 38, 122, 129, 847, 847, 122, 105, 548, 173, 162, 105, 697, 38, 697, 697, 290, 129, 268, 139, 410, 156, 156, 366, 38, 16, 64, 625, 162, 359, 410, 697, 580, 38, 380, 548, 38, 243, 310, 847, 697, 24, 139, 55, 386, 38, 457, 438, 161, 199, 72, 38, 134, 183, 751, 120, 539, 24, 257, 351, 71, 243, 38, 697, 486, 548, 697, 457, 60, 243, 243, 248, 194, 162, 139, 548, 548, 156, 170, 38, 847, 280, 38, 548, 156, 179, 380, 105, 139, 140, 74, 291, 243, 1516, 243, 16, 266, 243, 29, 548, 194, 243, 268, 38, 548, 163, 255, 243, 243, 445, 1281, 503, 405, 38, 293, 88, 139, 548, 38, 38, 24, 457, 16, 122, 122, 457, 708, 548, 41, 38, 6, 261, 246, 353, 38, 243, 120, 243, 414, 1516, 697, 19, 427, 338, 290, 243, 139, 481, 16, 290, 1281, 548, 16, 38, 266, 38, 156, 163, 134, 264, 265, 138, 151, 118, 494, 118, 134, 23, 100, 243, 94, 134, 358, 243, 28, 28, 430, 548, 358, 223, 243, 1792, 591, 181, 24, 82, 182, 38, 503, 315, 228, 290, 315, 243, 315, 243, 116, 196, 196, 196, 562, 257, 91, 751, 196, 196, 105, 28, 105, 562, 562, 797, 64, 243, 166, 60, 48, 180, 1537, 166, 161, 16, 38, 38, 167, 494, 138, 74, 74, 455, 494, 69, 494, 94, 4, 494, 243, 175, 421, 100, 243, 170, 118, 166, 266, 28, 133, 438, 248, 193, 38, 64, 166, 166, 166, 38, 380, 199, 396, 1149, 243, 116, 38, 94, 232, 797, 338, 514, 75, 163, 133, 23, 163, 6, 1516, 147, 75, 16, 139, 457, 243, 140, 290, 457, 163, 23, 122, 562, 315, 28, 290, 1174, 16, 28, 71, 129, 161, 494, 562, 315, 166, 135, 207, 207, 82, 151, 96, 118, 514, 24, 82, 282, 28, 38, 243, 243, 243, 48, 243, 508, 243, 243, 243, 243, 969, 100, 751, 118, 348, 282, 16, 140, 129, 883, 64, 151, 4, 74, 107, 243, 120, 243, 457, 120, 290, 290, 290, 74, 416, 64, 38, 156, 883, 591, 167, 139, 23, 94, 386, 1149, 266, 290, 243, 514, 654, 6, 91, 16, 243, 255, 401, 421, 1174, 591, 1174, 4, 494, 697, 16, 282, 282, 1174, 514, 134, 134, 71, 410, 180, 199, 243, 199, 199, 38, 1851, 539, 494, 243, 151, 243, 42, 219, 282, 348, 396, 969, 380, 358, 118, 378, 396, 243, 118, 74, 6, 138, 243, 243, 378, 161, 1174, 1174, 315, 378, 378, 315, 38, 182, 182, 654, 219, 77, 64, 64, 282, 243, 77, 539, 105, 363, 77, 243, 199, 82, 243, 129, 243, 64, 166, 255, 243, 243, 219, 166, 199, 232, 151, 467, 243, 467, 266, 315, 6, 6, 129, 421, 219, 467, 282, 457, 1174, 396, 539, 105, 594, 594, 358, 243, 23, 243, 243, 282, 118, 6, 266, 380, 358, 243, 697, 385, 113, 243, 118, 96, 243, 53, 562, 139, 53, 38, 116, 41, 182, 246, 1174, 429, 175, 181, 243, 139, 315, 243, 290, 82, 548, 243, 120, 243, 38, 182, 265, 290, 16, 243, 141, 30, 249, 562, 16, 351, 249, 249, 1132, 94, 243, 514, 118, 1851, 457, 486, 243, 373, 94, 559, 351, 255, 697, 373, 441, 591, 203, 100, 77, 129, 118, 6, 243, 1174, 322, 4, 751, 322, 380, 199, 252, 167, 105, 82, 94, 1174, 268, 315, 42, 386, 252, 246, 116, 161, 42, 100, 94, 166, 16, 252, 116, 280, 243, 243, 243, 120, 94, 94, 363, 196, 38, 38, 196, 243, 136, 243, 243, 96, 280, 315, 676, 243, 243, 94, 44, 248, 315, 4, 4, 4, 207, 94, 282, 44, 105, 42, 353, 16, 16, 508, 166, 152, 166, 166, 363, 60, 243, 1482, 1482, 562, 290, 82, 1516, 91, 243, 166, 6, 380, 53, 380, 94, 243, 135, 48, 969, 100, 380, 697, 697, 464, 105, 243, 120, 385, 141, 351, 243, 151, 464, 348, 751, 751, 416, 243, 23, 139, 151, 42, 193, 219, 353, 129, 338, 232, 6, 353, 243, 503, 91, 514, 243, 1174, 243, 77, 105, 385, 82, 77, 290, 380, 71, 38, 33, 38, 1174, 751, 122, 503, 315, 528, 249, 156, 243, 277, 268, 118, 219, 441, 441, 441, 243, 243, 969, 219, 969, 494, 113, 151, 315, 503, 134, 182, 182, 464, 16, 173, 136, 1132, 351, 6, 243, 1174, 15, 105, 139, 380, 105, 358, 282, 243, 134, 134, 315, 161, 196, 94, 243, 6, 53, 163, 38, 193, 151, 38, 1792, 38, 243, 243, 166, 71, 49, 49, 38, 134, 353, 118, 257, 69, 122, 243, 23, 74, 88, 38, 23, 49, 751, 74, 140, 74, 96, 243, 282, 282, 118, 248, 107, 243, 116, 118, 6, 100, 385, 207, 257, 255, 486, 182, 257, 105, 1144, 243, 486, 1174, 486, 528, 120, 105, 170, 290, 358, 120, 378, 147, 23, 38, 181, 38, 243, 120, 38, 120, 120, 348, 243, 246, 380, 503, 464, 151, 94, 203, 243, 134, 105, 1537, 38, 82, 139, 105, 282, 282, 1174, 243, 243, 74, 134, 170, 162, 396, 243, 243, 1792, 4, 562, 219, 6, 82, 290, 105, 175, 105, 243, 199, 151, 266, 697, 378, 69, 192, 266, 348, 4, 175, 181, 351, 77, 220, 162, 23, 385, 385, 28, 385, 385, 161, 30, 94, 139, 282, 118, 243, 243, 243, 486, 243, 322, 166, 105, 105, 243, 166, 385, 166, 156, 151, 38, 243, 514, 151, 138, 351, 173, 243, 173, 192, 268, 38, 88, 1792, 156, 243, 467, 38, 751, 193, 445, 486, 71, 140, 140, 140, 486, 173, 248, 243, 24, 134, 74, 105, 181, 457, 457, 429, 429, 118, 199, 113, 243, 265, 290, 156, 243, 48, 310, 199, 266, 310, 243, 467, 243, 255, 38, 118, 199, 53, 290, 290, 64, 353, 139, 243, 91, 152, 351, 265, 24, 170, 91, 445, 53, 464, 69, 353, 676, 282, 199, 378, 243, 486, 559, 559, 315, 38, 697, 96, 559, 322, 246, 528, 71, 486, 310, 255, 58, 243, 430, 116, 264, 38, 162, 122, 38, 514, 105, 243, 315, 72, 24, 1792, 248, 91, 548, 243, 156, 15, 248, 243, 199, 594, 38, 494, 71, 503, 105, 232, 594, 129, 380, 243, 243, 24, 94, 548, 24, 266, 44, 243, 282, 457, 290, 1174, 243, 38, 41, 113, 199, 1174, 446, 446, 24, 199, 243, 180, 38, 248, 243, 4, 243, 105, 248, 243, 1174, 243, 24, 697, 223, 457, 64, 94, 24, 457, 134, 38, 196, 243, 166, 503, 243, 380, 163, 1537, 243, 163, 243, 228, 243, 455, 199, 559, 559, 192, 135, 199, 38, 243, 243, 138, 75, 94, 163, 243, 514, 4, 4, 243, 74, 243, 38, 396, 697, 194, 243, 299, 277, 134, 455, 88, 144, 182, 41, 91, 266, 367, 100, 24, 24, 338, 1533, 55, 58, 371, 371, 751, 243, 243, 264, 371, 243, 179, 133, 401, 133, 6, 102, 133, 1149, 1149, 181, 38, 8, 167, 243, 194, 255, 133, 45, 38, 38, 39, 133, 133, 133, 243, 280, 1019, 243, 190, 166, 102, 16, 124, 124, 438, 243, 268, 102, 751, 548, 118, 55, 166, 2, 38, 139, 55, 181, 751, 166, 503, 181, 91, 1149, 243, 708, 373, 122, 797, 176, 176, 220, 243, 134, 176, 163, 291, 167, 167, 38, 100, 6, 1149, 1149, 17, 17, 134, 235, 243, 55, 143, 200, 97, 97, 122, 111, 1339, 38, 38, 200, 91, 91, 97, 349, 1174, 91, 122, 91, 163, 255, 243, 938, 158, 58, 42, 120, 349, 338, 409, 20, 472, 243, 174, 174, 174, 751, 188, 390, 243, 170, 122, 1144, 28, 1144, 55, 134, 307, 100, 1506, 190, 174, 548, 366, 243, 122, 190, 291, 467, 13, 243, 139, 163, 266, 219, 117, 243, 42, 180, 158, 248, 166, 336, 1288, 11, 41, 17, 336, 31, 24, 248, 133, 151, 82, 266, 243, 129, 371, 179, 243, 41, 192, 243, 6, 445, 243, 697, 299, 162, 107, 421, 55, 349, 386, 137, 88, 38, 107, 243, 162, 88, 410, 384, 91, 243, 1149, 91, 401, 280, 196, 243, 22, 280, 438, 38, 97, 163, 163, 1149, 243, 219, 163, 159, 11, 4, 219, 208, 581, 472, 303, 163, 163, 445, 190, 190, 549, 549, 938, 156, 445, 243, 163, 156, 254, 200, 91, 1149, 41, 328, 120, 134, 1144, 122, 373, 1288, 445, 467, 373, 255, 111, 376, 41, 1144, 133, 75, 166, 38, 134, 55, 122, 120, 120, 697, 1288, 421, 272, 255, 6, 243, 254, 194, 120, 438, 311, 268, 349, 409, 97, 751, 266, 280, 175, 232, 232, 266, 29, 94, 243, 380, 175, 175, 175, 530, 102, 4, 6, 39, 594, 156, 87, 102, 438, 55, 156, 97, 156, 122, 159, 528, 42, 13, 133, 708, 156, 594, 4, 243, 156, 53, 380, 6, 1288, 38, 455, 29, 241, 190, 380, 380, 88, 181, 243, 176, 409, 259, 88, 349, 307, 130, 708, 409, 129, 196, 336, 445, 243, 312, 24, 46, 1019, 1691, 97, 97, 336, 243, 120, 219, 122, 363, 122, 122, 163, 11, 1721, 1144, 452, 697, 1516, 107, 307, 200, 241, 133, 28, 38, 134, 255, 452, 137, 386, 255, 141, 163, 46, 89, 380, 20, 20, 13, 277, 277, 457, 235, 455, 280, 156, 156, 134, 42, 243, 120, 6, 138, 290, 243, 266, 243, 133, 386, 220, 133, 134, 386, 6, 130, 235, 235, 137, 137, 137, 41, 697, 280, 137, 384, 243, 697, 272, 167, 280, 290, 243, 116, 138, 243, 11, 194, 1533, 38, 268, 4, 1691, 120, 179, 120, 167, 180, 751, 41, 107, 38, 386, 179, 708, 94, 107, 438, 594, 120, 29, 6, 243, 290, 1533, 1533, 77, 243, 243, 161, 797, 190, 13, 797, 797, 376, 410, 17, 243, 243, 243, 243, 107, 120, 243, 24, 697, 243, 751, 243, 266, 243, 77, 17, 143, 243, 122, 243, 41, 141, 438, 243, 1174, 254, 243, 41, 351, 141, 71, 438, 243, 243, 180, 71, 71, 1516, 243, 151, 24, 124, 120, 120, 118, 129, 290, 243, 243, 315, 243, 97, 58, 190, 409, 421, 315, 386, 751, 179, 2, 280, 1144, 1516, 6, 1533, 235, 232, 122, 141, 163, 122, 200, 235, 255, 100, 230, 266, 230, 1288, 38, 42, 264, 55, 176, 1144, 176, 266, 457, 751, 219, 120, 266, 100, 697, 697, 257, 200, 91, 243, 8, 31, 134, 179, 266, 176, 254, 338, 410, 503, 220, 20, 254, 243, 163, 280, 118, 137, 13, 220, 38, 697, 235, 181, 181, 161, 161, 13, 255, 75, 266, 11, 291, 353, 122, 751, 243, 266, 269, 269, 13, 122, 139, 188, 11, 55, 188, 956, 243, 116, 6, 6, 117, 581, 248, 359, 38, 116, 159, 264, 38, 91, 548, 751, 24, 161, 161, 96, 13, 139, 200, 100, 42, 122, 255, 94, 42, 100, 180, 188, 697, 141, 38, 180, 266, 751, 277, 77, 88, 751, 6, 58, 6, 120, 24, 113, 243, 41, 280, 120, 198, 20, 20, 280, 33, 751, 363, 380, 396, 243, 13, 424, 243, 467, 219, 82, 139, 94, 797, 89, 89, 45, 181, 376, 38, 200, 100, 410, 38, 64, 107, 122, 38, 1339, 97, 134, 91, 38, 196, 181, 13, 181, 243, 219, 1506, 528, 530, 55, 349, 219, 255, 255, 255, 266, 243, 220, 243, 255, 13, 161, 697, 410, 163, 200, 24, 161, 291, 156, 243, 142, 243, 143, 20, 243, 41, 1857, 156, 156, 198, 88, 1339, 243, 380, 100, 139, 142, 328, 266, 38, 17, 266, 528, 111, 243, 77, 6, 196, 133, 445, 1506, 188, 179, 268, 38, 166, 58, 243, 28, 366, 697, 291, 16, 28, 291, 161, 243, 243, 20, 100, 255, 196, 751, 438, 349, 129, 192, 751, 13, 64, 220, 143, 438, 181, 359, 32, 1144, 6, 102, 196, 6, 190, 42, 179, 120, 143, 697, 751, 33, 140, 697, 264, 457, 107, 264, 87, 367, 264, 140, 424, 208, 179, 120, 751, 58, 548, 367, 91, 156, 91, 120, 380, 401, 22, 259, 697, 196, 141, 548, 6, 94, 38, 38, 243, 264, 6, 134, 42, 6, 58, 2, 243, 312, 87, 243, 38, 181, 1721, 97, 181, 38, 390, 88, 120, 82, 2, 134, 122, 38, 223, 94, 38, 122, 151, 13, 424, 181, 243, 956, 751, 243, 137, 140, 2, 2, 38, 243, 6, 91, 266, 467, 64, 143, 140, 111, 8, 311, 1857, 232, 140, 290, 167, 38, 410, 144, 6, 75, 55, 272, 272, 24, 24, 163, 24, 17, 141, 280, 264, 167, 182, 257]
football_12 = [8, 57, 6, 40, 8, 40, 6, 27, 27, 8, 40, 88, 58, 6, 58, 6, 8, 102, 58, 104, 102, 27, 27, 8, 88, 57, 58, 102, 88, 104, 104, 58, 6, 57, 58, 104, 58, 57, 58, 6, 40, 8, 58, 58, 103, 57, 93, 6, 103, 93, 88, 27, 40, 93, 58, 104, 102, 103, 105, 105, 6, 58, 102, 105, 6, 102, 103, 93, 27, 88, 102, 58, 40, 93, 40, 103, 102, 27, 27, 104, 104, 40, 104, 93, 40, 58, 103, 102, 93, 57, 88, 103, 103, 8, 104, 102, 102, 105, 40, 58, 6, 104, 40, 57, 8, 57, 6, 40, 27, 57, 93, 27, 103, 102, 93]
polbooks = [0, 0, 0, 99, 0, 0, 0, 0, 99, 99, 6, 99, 99, 99, 99, 6, 6, 99, 99, 6, 99, 99, 99, 99, 99, 99, 99, 99, 94, 0, 94, 94, 99, 6, 6, 6, 99, 6, 6, 6, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 42, 42, 99, 99, 6, 99, 99, 42, 87, 87, 94, 87, 87, 42, 42, 94, 42, 42, 42, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 42, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 87, 94, 94, 94, 36, 36]
# beican_9 = [0,0,0,0,1,1,1,1,1]
zhang = [1, 0, 0, 2, 0, 1, 1, 2, 1, 2, 0, 2, 2]
email_17 = [14, 14, 14, 12, 14, 14, 14, 14, 14, 8, 14, 10, 14, 8, 5, 4, 8, 14, 14, 14, 14, 14, 14, 8, 14, 14, 14, 14, 1, 4, 6, 14, 8, 8, 14, 14, 14, 14, 14, 4, 14, 13, 14, 11, 14, 12, 14, 14, 4, 14, 14, 14, 12, 5, 4, 4, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 8, 12, 12, 14, 4, 10, 5, 4, 8, 4, 4, 14, 14, 11, 10, 4, 14, 5, 4, 5, 12, 14, 4, 5, 14, 14, 1, 14, 12, 5, 1, 4, 14, 14, 4, 4, 15, 4, 8, 8, 8, 8, 8, 8, 8, 8, 4, 8, 4, 8, 8, 8, 6, 8, 8, 8, 5, 4, 4, 4, 4, 14, 12, 14, 14, 14, 1, 14, 14, 10, 10, 10, 10, 11, 13, 10, 10, 10, 10, 10, 10, 14, 10, 11, 4, 14, 14, 6, 15, 11, 0, 8, 4, 8, 8, 8, 8, 8, 8, 8, 8, 4, 8, 8, 8, 8, 8, 8, 8, 8, 14, 8, 8, 5, 5, 10, 5, 5, 15, 5, 5, 5, 4, 4, 4, 8, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 8, 8, 8, 14, 14, 14, 10, 14, 14, 14, 14, 14, 15, 14, 14, 7, 14, 14, 14, 14, 14, 12, 14, 14, 14, 1, 14, 14, 6, 14, 14, 14, 8, 14, 15, 4, 6, 14, 14, 14, 4, 7, 14, 14, 10, 15, 14, 14, 6, 14, 8, 4, 14, 11, 8, 7, 15, 8, 6, 12, 8, 11, 12, 12, 8, 4, 4, 8, 4, 8, 4, 8, 8, 8, 4, 14, 11, 10, 7, 14, 13, 7, 4, 14, 4, 15, 7, 1, 1, 1, 1, 1, 1, 15, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 6, 14, 6, 11, 6, 1, 6, 4, 6, 14, 6, 6, 13, 8, 4, 15, 14, 14, 11, 4, 1, 14, 14, 15, 15, 10, 8, 11, 13, 15, 1, 4, 4, 1, 4, 4, 15, 4, 8, 15, 15, 1, 10, 14, 12, 14, 14, 1, 14, 14, 1, 13, 13, 13, 13, 13, 13, 13, 13, 11, 11, 4, 15, 15, 13, 13, 15, 11, 1, 11, 14, 4, 4, 8, 1, 10, 14, 11, 11, 11, 11, 11, 11, 11, 11, 11, 15, 10, 1, 14, 7, 6, 1, 7, 15, 14, 15, 12, 12, 12, 7, 12, 11, 1, 6, 11, 4, 4, 4, 4, 4, 14, 4, 4, 1, 14, 14, 4, 7, 14, 15, 14, 15, 15, 7, 5, 15, 15, 1, 15, 14, 7, 14, 5, 5, 5, 5, 5, 15, 8, 4, 12, 7, 4, 4, 4, 7, 12, 7, 7, 7, 7, 7, 7, 7, 7, 12, 7, 7, 12, 8, 12, 8, 8, 12, 12, 8, 12, 8, 1, 12, 12, 12, 12, 4, 11, 10, 12, 12, 12, 12, 12, 12, 1, 7, 7, 15, 12, 12, 4, 12, 14, 1, 8, 1, 12, 12, 12, 1, 1, 1, 15, 8, 8, 7, 12, 2, 14, 12, 15, 12, 12, 15, 11, 6, 1, 4, 1, 4, 15, 15, 4, 15, 11, 15, 7, 1, 10, 10, 1, 10, 14, 1, 15, 8, 7, 7, 5, 5, 15, 8, 5, 11, 14, 10, 6, 8, 1, 4, 13, 5, 4, 6, 4, 4, 4, 14, 14, 14, 15, 5, 11, 11, 4, 4, 4, 4, 4, 14, 5, 4, 4, 4, 5, 5, 5, 12, 1, 8, 1, 1, 1, 14, 1, 14, 14, 14, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 12, 5, 4, 1, 14, 14, 14, 1, 12, 12, 4, 12, 14, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 15, 15, 15, 15, 15, 15, 6, 15, 15, 15, 15, 14, 15, 15, 4, 4, 8, 8, 8, 8, 4, 8, 8, 8, 4, 14, 4, 4, 4, 4, 1, 4, 5, 8, 6, 6, 6, 8, 8, 14, 4, 8, 8, 4, 4, 4, 4, 4, 14, 14, 14, 4, 14, 14, 7, 15, 5, 7, 10, 14, 1, 14, 14, 14, 1, 1, 1, 10, 10, 10, 10, 10, 11, 11, 11, 11, 1, 11, 11, 1, 13, 13, 13, 10, 10, 10, 10, 10, 10, 10, 10, 11, 11, 11, 11, 11, 11, 1, 1, 15, 15, 15, 15, 14, 11, 7, 0, 0, 8, 6, 8, 8, 1, 1, 5, 15, 10, 15, 15, 15, 15, 13, 5, 1, 4, 4, 8, 4, 4, 4, 4, 4, 13, 4, 4, 4, 11, 4, 4, 4, 4, 1, 4, 1, 4, 4, 4, 7, 4, 4, 4, 4, 4, 8, 4, 3, 7, 1, 14, 7, 14, 14, 14, 14, 7, 15, 5, 15, 15, 5, 1, 7, 7, 15, 14, 15, 7, 14, 14, 8, 12, 1, 1, 6, 11, 8, 8, 8, 14, 14, 14, 15, 15, 14, 15, 7, 7, 7, 3, 10, 10, 15, 14, 7, 14, 14, 14, 11, 1, 1, 8, 4, 15, 7, 11, 8, 7, 7, 7, 7, 1, 8, 8, 8, 8, 8, 8, 8, 8, 8, 4, 14, 11, 11, 11, 11, 11, 13, 13, 13, 13, 13, 13, 13, 13, 7, 9, 14, 14, 4, 1, 1, 1, 11, 1, 1, 1, 1, 1, 1, 1, 15, 15, 4, 4, 4, 4, 16, 13, 6, 7, 1, 1, 5, 7, 6, 7, 15, 6, 12, 1, 6, 6, 6, 13, 13, 13, 15, 11, 11, 11, 11, 11, 11, 11, 1, 14, 14, 15, 15, 15, 15, 15, 10, 8, 7, 11, 8, 14, 11, 15, 1, 8, 8, 8, 1, 1, 1, 1, 1, 14, 14, 1, 14, 13, 13, 11, 15, 14, 13, 13, 13, 15, 1, 11, 6, 1, 1, 5, 11, 1, 11, 7, 7, 7, 15, 12, 12, 12, 12, 7, 1, 1, 1, 4, 7, 7, 15, 15, 15, 5, 5, 12, 15, 15, 14, 14, 14, 7, 7, 7, 7, 7, 7, 7, 7, 5, 5, 5, 5, 1, 8, 7, 7, 7, 7, 7, 7, 7, 8, 7, 7, 7, 7, 4, 8, 1, 12, 1, 1, 7, 1, 1, 8, 2, 15, 1, 15, 15, 15, 7, 11, 14, 1, 1, 1, 14, 1, 1, 13, 14, 15, 4, 4, 4, 5, 1, 1, 1, 1, 1, 1, 1, 4, 8, 6, 6, 6, 6, 15, 8, 4, 8, 8, 14, 7, 7, 14, 11, 7, 1, 10, 15, 1, 4, 7, 1, 11, 11, 11, 7, 7, 7, 8, 11, 13, 9, 16, 6, 12, 14, 15, 13, 12, 12, 15, 7, 1, 15, 1, 6, 14]
email_26 = [4, 4, 4, 8, 4, 4, 4, 4, 4, 24, 4, 9, 4, 24, 23, 20, 22, 4, 4, 4, 4, 4, 4, 24, 4, 4, 4, 4, 23, 20, 19, 4, 24, 24, 4, 4, 4, 4, 4, 20, 4, 6, 4, 10, 4, 8, 4, 4, 20, 4, 4, 12, 8, 23, 20, 20, 8, 8, 8, 8, 0, 8, 8, 8, 8, 8, 8, 8, 8, 24, 8, 8, 4, 20, 9, 23, 20, 24, 20, 20, 12, 24, 10, 9, 20, 4, 23, 20, 18, 8, 12, 20, 18, 21, 4, 21, 4, 11, 23, 4, 20, 21, 4, 20, 20, 5, 20, 24, 24, 24, 24, 24, 24, 24, 22, 20, 24, 20, 24, 24, 24, 19, 24, 24, 22, 15, 20, 20, 20, 20, 12, 0, 4, 12, 12, 2, 4, 4, 9, 9, 9, 9, 10, 9, 9, 9, 9, 9, 9, 9, 12, 9, 10, 20, 12, 12, 19, 22, 10, 13, 24, 20, 24, 24, 24, 24, 24, 24, 24, 24, 0, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 23, 23, 9, 23, 23, 5, 23, 23, 23, 20, 20, 20, 22, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 22, 22, 22, 4, 4, 12, 18, 4, 12, 4, 4, 24, 5, 4, 24, 13, 10, 4, 12, 12, 10, 0, 4, 4, 4, 19, 4, 4, 19, 4, 4, 12, 22, 12, 5, 20, 19, 4, 4, 4, 20, 13, 4, 21, 9, 5, 12, 12, 6, 4, 0, 20, 5, 10, 22, 13, 5, 24, 5, 8, 22, 10, 8, 8, 22, 24, 20, 22, 20, 24, 20, 24, 22, 24, 24, 19, 10, 9, 13, 2, 6, 1, 20, 4, 20, 5, 13, 23, 23, 23, 23, 16, 23, 5, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 19, 12, 19, 10, 19, 21, 19, 20, 19, 12, 5, 5, 6, 24, 20, 5, 4, 12, 10, 12, 8, 4, 8, 5, 5, 9, 22, 10, 6, 5, 8, 20, 20, 8, 20, 20, 5, 4, 22, 5, 5, 21, 9, 5, 8, 4, 12, 21, 12, 5, 19, 6, 6, 6, 6, 6, 6, 6, 6, 10, 10, 20, 5, 6, 3, 12, 22, 10, 21, 10, 10, 20, 20, 6, 21, 6, 4, 10, 10, 10, 10, 10, 10, 10, 10, 10, 5, 9, 21, 12, 13, 19, 21, 13, 5, 4, 5, 8, 8, 13, 19, 8, 10, 15, 19, 10, 20, 20, 20, 20, 20, 4, 20, 20, 19, 4, 12, 20, 13, 12, 5, 3, 5, 5, 13, 18, 5, 5, 21, 5, 3, 13, 12, 11, 23, 18, 23, 23, 5, 20, 20, 0, 13, 20, 20, 20, 13, 8, 13, 13, 13, 13, 13, 13, 13, 13, 8, 13, 13, 8, 22, 8, 8, 24, 8, 8, 22, 5, 8, 14, 8, 8, 0, 0, 20, 10, 9, 8, 8, 8, 8, 8, 8, 19, 13, 7, 5, 8, 8, 20, 8, 19, 8, 8, 20, 12, 8, 8, 16, 20, 16, 24, 24, 24, 13, 5, 14, 12, 8, 5, 8, 8, 5, 10, 19, 8, 20, 20, 0, 5, 5, 20, 5, 10, 5, 13, 19, 9, 9, 16, 9, 20, 16, 5, 24, 13, 13, 23, 23, 5, 24, 23, 10, 12, 9, 19, 24, 2, 20, 6, 23, 23, 19, 20, 20, 20, 12, 12, 12, 5, 23, 10, 10, 20, 20, 20, 20, 20, 21, 18, 20, 20, 20, 23, 18, 18, 8, 21, 8, 21, 21, 21, 12, 21, 3, 12, 12, 20, 0, 20, 20, 20, 18, 23, 23, 18, 18, 18, 11, 18, 20, 21, 21, 12, 10, 21, 11, 11, 20, 0, 23, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 5, 5, 5, 5, 5, 5, 5, 5, 5, 22, 5, 12, 5, 11, 20, 20, 22, 24, 24, 22, 22, 22, 22, 22, 20, 12, 20, 20, 20, 20, 2, 20, 15, 24, 19, 19, 22, 22, 24, 12, 20, 22, 22, 20, 20, 20, 20, 20, 12, 3, 12, 12, 19, 24, 12, 5, 18, 13, 9, 8, 23, 12, 12, 12, 2, 2, 23, 9, 9, 9, 9, 9, 10, 10, 10, 8, 21, 10, 10, 21, 9, 9, 18, 9, 9, 9, 15, 9, 9, 9, 9, 10, 10, 10, 10, 10, 10, 19, 21, 22, 22, 22, 22, 12, 10, 13, 13, 13, 24, 5, 13, 24, 14, 20, 23, 5, 14, 5, 5, 5, 5, 3, 23, 19, 4, 20, 22, 20, 20, 20, 20, 20, 6, 20, 20, 20, 10, 20, 20, 20, 20, 15, 20, 23, 20, 20, 20, 16, 20, 20, 20, 20, 20, 22, 20, 4, 13, 19, 12, 13, 4, 4, 5, 12, 13, 5, 11, 5, 24, 18, 20, 13, 13, 5, 4, 5, 12, 12, 10, 3, 0, 19, 19, 19, 6, 22, 22, 22, 3, 12, 3, 5, 5, 4, 5, 25, 13, 13, 4, 9, 9, 5, 12, 13, 12, 12, 12, 10, 15, 8, 0, 20, 5, 18, 6, 22, 13, 13, 13, 13, 21, 22, 22, 22, 22, 22, 22, 22, 22, 24, 20, 12, 10, 10, 10, 10, 10, 6, 6, 6, 6, 10, 3, 3, 6, 1, 19, 4, 4, 20, 16, 16, 19, 10, 23, 15, 19, 23, 15, 15, 16, 5, 5, 20, 20, 20, 20, 15, 3, 2, 13, 21, 21, 18, 16, 19, 13, 5, 5, 5, 15, 13, 5, 5, 6, 6, 6, 5, 10, 10, 10, 10, 10, 10, 10, 8, 4, 4, 5, 5, 5, 5, 5, 9, 22, 13, 10, 22, 10, 10, 5, 15, 22, 20, 22, 21, 21, 21, 21, 21, 12, 12, 21, 5, 3, 6, 10, 5, 3, 3, 3, 3, 22, 21, 10, 5, 8, 8, 11, 10, 21, 10, 12, 13, 13, 1, 8, 8, 8, 8, 13, 21, 15, 15, 20, 13, 13, 11, 5, 5, 18, 18, 11, 5, 5, 3, 3, 3, 13, 13, 13, 13, 13, 13, 13, 13, 11, 18, 23, 23, 15, 20, 13, 13, 13, 13, 13, 25, 13, 8, 13, 25, 13, 13, 22, 22, 14, 8, 8, 19, 7, 20, 16, 24, 14, 5, 5, 5, 5, 5, 13, 19, 20, 16, 16, 15, 3, 15, 15, 6, 12, 5, 20, 10, 20, 18, 15, 15, 21, 21, 21, 21, 21, 0, 22, 5, 5, 5, 2, 5, 22, 20, 22, 22, 17, 13, 25, 12, 10, 13, 20, 14, 5, 15, 20, 13, 19, 6, 6, 6, 13, 18, 13, 22, 10, 6, 19, 15, 5, 5, 10, 1, 3, 8, 8, 11, 13, 20, 5, 21, 5, 17]

# benson = [0, 1, 1, 0, 0, 1, 1, 1, 0, 1]
benson = [0, 1, 1, 0, 0, 1, 0, 1, 0, 1]

beican_9 = [0, 0, 1, 1, 0, 2, 2, 2, 2]
karate = [1,1,1,1,1,1,1,1,0,0,1,1,1,1,0,0,1,1,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0]
combat = [1, 0, 0, 2, 1, 1, 1, 2, 2, 2, 2, 0, 0, 0, 1, 1]
example_14 = [0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1]
example_15 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1]
test_7 = [0, 0, 0, 0, 1, 1, 1]

Xi = eval(network_name)
# X[835]=X[1110]=X[1109]=X[1108] = X[858]
Xfit = func.fit_Q(Compactness, motif_info,np.asarray(Xi),motif_adj,n,len(set(Xi)),W,m,'Q') 
# Xfit = 0.6839135644652968
print("c={},Xfit={}".format(len(set(Xi)), Xfit))
nmm_fit = [Xfit]
Qws = []
for run in range(1):
    X = copy.deepcopy(Xi)
    # print(X)
    for itmp in range(1):
        # XsetC_len = len(set(X))
        # cno_list = [cno for cno in range(XsetC_len)]
        # setX_dict = dict(zip(set(X), cno_list))
        # for i, icno in enumerate(X): X[i]=setX_dict[icno]
        #转化成partition
        Xpartition = {}
        for cno in set(X):
            Xpartition[cno] = []
        for node, icno in enumerate(X):
            Xpartition[icno].append(node)
        #归一化Compactness数据
        # start_time = time.process_time()
        XMem = func.conversion_code(MB, node_nei_info, X, me_adj, n)  #根据当前社区划分，计算该个体的隶属度矩阵
        # XMemMatrix[0]=XMem
        
        
#         # nmm_pop = np.random.randint(n, size=(n, 1))
#         # nmm_pop[:,0] = np.asarray(X)
        
        
        # MXMem = func.conversion_codeV1(Compactness, node_nei_info, motif_info, X, motif_adj, n)  # 构建该个体的隶属度矩阵
        MXMem = func.conversion_codeV2(motif_info, X, XMem)  #根据当前个体的隶属度矩阵，计算该个体的模体隶属度矩阵
#         # motif_info['MUs'][0] = MXMem
#         # start_time = time.process_time()
#         # # print("\n\n")
#         # beeetrNMM = func.MNMMV1(MB,Compactness,motif_info,node_nei_info,nmm_pop,nmm_fit,XMemMatrix,n,1,motif_adj,me_adj,W,m)
#         LTCM_flag = func.merge_community(MB, node_nei_info, X, Xpartition, True)
#         # LTCM_flag = func.merge_community(MB, node_nei_info, X, Xpartition,  motif_adj, True)
#         # yyyy = list(filter(None,VertexClustering(Gi,copy.deepcopy(X))))
#         # yyyy,LTCM_flag = merge_comm(Gi,yyyy,n)
#         # # 社区合并结果
#         # com_list_symbol=[0]*n
#         # for i in range(len(yyyy)):
#         #     for j in yyyy[i]:
#         #         com_list_symbol[j]=i
#         # X = com_list_symbol
#         if not LTCM_flag:
#             print("###### CM完成！ ######")
#             break
    
#     Xnewfit = func.fit_Q(Compactness, motif_info,np.asarray(X),motif_adj,n,len(set(X)),W,m,'Q') 
#     # Xfit = 0.6839135644652968
#     # print("c={},newXfit={}".format(len(set(X)), Xnewfit))
#     Qws.append(Xnewfit)
#     # X = nmm_pop[:,0]
#     # end_time = time.process_time()
#     # # print("spendTime=",end_time-start_time)
# print('QW_mean={},std={}, max={}'.format(round(np.mean(Qws),6), np.std(Qws), max(Qws)))
# print("c=",len(set(X)))
#     # print("\nc={},NMMFit={}".format(len(set(nmm_pop[:,0])), nmm_fit[0]))
#     # print("X=",X)
    
    
    # Xpartition = {}
    # for cno in set(X):
    #     Xpartition[cno] = []
    # for node, icno in enumerate(X):
    #     Xpartition[icno].append(node)
# XfitQg = func.fit_Q(Compactness, motif_info, XMem, motif_adj, n, XsetC_len, W, m, 'Qg') #计算初始XQg值
# print("XfitQg1=",XfitQg)
# 优化隶属度矩阵
# start_time = time.process_time()
# for i in range(20):
#     XMem, XfitQg = func.optimize_U(Compactness,node_nei_info,motif_info, X, XMem, XfitQg, motif_adj, n, W, m, B, 3, setX_dict)
# print("XfitQg2=",XfitQg)
# end_time = time.process_time()
# print("spendTime=",end_time-start_time)

# Xtmp = np.argmax(XMem,axis=0)
# for index,x in enumerate(X):
#     if setX_dict[x] != Xtmp[index]:
#         print("********ERROR!!!*********")

# X1 = copy.deepcopy(X)
# # cno = X1[66]
# # X1[63]=cno
# # X1[59]=cno
# # X1[58]=cno
# # X1[97]=cno
# X1[63]=X[65]
# X1[58]=X[65]
# X1[59]=X[65]
# X1[97]=X[65]

# # M = (497,763,1047)
# M = (58,497,498)
# mno = motif_info['motif_dict'][M]
# mno_cno = np.argmax(MXMem[:,mno])
# print("mno_cno={}".format(mno_cno))

# node = 497
# print("Attrcno=",np.argmax(XMemMatrix[0][:,node]))
# # Xfit2 = func.fit_Q(Compactness, motif_info,np.asarray(X1),motif_adj,n,len(set(X1)),W,m,'Q') 
# # M_Qw=ig.GraphBase.modularity(Gi,X1,ij_participate_motif_number_list) 















# print("Xfit=",Xfit2,M_Qw)

# testUnew = copy.deepcopy(XMem)
# testUnew[17,421],testUnew[19,421] = 0.7,0.3
# testUnew[:,421]/=sum(testUnew[:,421])
# testUnew[17,563],testUnew[19,563] = testUnew[17,563],0.0
# testUnew[:,563]/=sum(testUnew[:,563])
# testUnew[17,553],testUnew[19,553] =6.0,0.0
# testUnew[:,553]/=sum(testUnew[:,553])
# testUnew_Qc = func.fit_Q(MB,motif_info, testUnew, motif_adj, n, XsetC_len, W, m, 'Qc')
# print("delta_Qc={}".format(testUnew_Qc-XfitQg))

# X1, XfitM, memger_falg = func.merge_community(Compactness,copy.deepcopy(X), Xfit, node_nei_info, motif_adj, W, m)
# X1, XfitM, memger_falg = func.merge_community(Compactness,copy.deepcopy(XMem),copy.deepcopy(X), Xfit, node_nei_info, motif_adj, W, m, setX_dict)
# X, XfitM, memger_falg = func.merge_community1(copy.deepcopy(X),Xfit, node_nei_info, motif_adj, W, m)
# if memger_falg:
#     print("XfitM=",XfitM)

# MBTest = MB
# testlist = [test1,test2,test3,test4,test5,test6,test7,test8,test9]
# testlist = [email_34]
# fitAve = []
# for test in testlist:
#     Xfit = func.fit_Q(motif_info,np.asarray(test),motif_adj,n,len(set(test)),W,m,'Q') 
#     maxFit = Xfit
#     maxBestX = test
#     Memger_falg = False
#     for i in range(50):
#         X, Xfit1, falg = func.merge_community1(copy.deepcopy(test),Xfit, node_nei_info, motif_adj, W, m)
#         if falg and Xfit1>maxFit:
#             maxBestX=X
#             maxFit=Xfit1
#             Memger_falg = True
    
#     # X, Xfit, falg = func.merge_community1(copy.deepcopy(email_34),Xfit, node_nei_info, motif_adj, W, m)
#     if Memger_falg:
#         print("Xfit=",maxFit)
#         fitAve.append(maxFit)

# print("fitAve=",np.mean(fitAve))  

# test = [99, 101, 369, 396, 402, 416, 420, 456, 605, 608, 609, 629, 749, 922, 924, 966, 967, 969, 970, 1079, 1080, 1081, 1082, 1083, 1130]     
# j = 95
# result = 0    
# for i in test:
#     result+=motif_adj[j,i]
# print("result=",result)


# =============================================================================
# 获得各节所参与构成的模体对各社区的隶属度总和
# =============================================================================
c = XMem.shape[0]
X_sum_MXmem = np.zeros((c,n))
for i in range(n):
    # 获得该节点参与构成的模体集合
    i_m_set = motif_info['node_mdict'][i]
    # 获得该节点的模体编号集合
    i_mno_set = [motif_info['motif_dict'][m] for m in i_m_set]
    # 计算隶属度总和
    for c_index in range(c):
        for mno in i_mno_set:
            X_sum_MXmem[c_index,i] += MXMem[c_index, mno]
    

membership_c = np.argmax(XMem, axis=0)
X_sum_membership_c = np.argmax(X_sum_MXmem, axis=0)
# X_membership_c_nmi = ig.compare_communities(real_mem, Xi, method='nmi', remove_none=False)  
# membership_c_nmi=ig.compare_communities(real_mem, membership_c, method='nmi', remove_none=False)   
# X_sum_membership_c_nmi=ig.compare_communities(real_mem, X_sum_membership_c, method='nmi', remove_none=False)   

X_membership_c_Qw = func.fit_Q(Compactness, motif_info,np.asarray(Xi),motif_adj,n,len(set(Xi)),W,m,'Q')
membership_c_Qw = func.fit_Q(Compactness, motif_info,np.asarray(membership_c),motif_adj,n,len(set(membership_c)),W,m,'Q')
X_sum_membership_c_Qw = func.fit_Q(Compactness, motif_info,np.asarray(X_sum_membership_c),motif_adj,n,len(set(X_sum_membership_c)),W,m,'Q')

print("\n####################")
# print("X_membership_c=",X_membership_c_nmi)
# print("membership_c=",membership_c_nmi)
# print("X_sum_membership_c=",X_sum_membership_c_nmi)
print("####################\n")

print("\n####################")
print("X_membership_c_Qw=",Xi)
print("membership_c_Qw=",membership_c)
print("X_sum_membership_c_Qw=",X_sum_membership_c)
print("####################\n")

print("\n####################")
print("X_membership_c_Qw=",X_membership_c_Qw)
print("membership_c_Qw=",membership_c_Qw)
print("X_sum_membership_c_Qw=",X_sum_membership_c_Qw)
print("####################\n")


